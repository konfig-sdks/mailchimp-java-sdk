/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.VerifiedDomainsAddDomainToAccount200Response;
import com.konfigthis.client.model.VerifiedDomainsAddDomainToAccountRequest;
import com.konfigthis.client.model.VerifiedDomainsAddDomainToAccountResponse;
import com.konfigthis.client.model.VerifiedDomainsAddDomainToAccountdefaultResponse;
import com.konfigthis.client.model.VerifiedDomainsDeleteDomainResponse;
import com.konfigthis.client.model.VerifiedDomainsDeleteDomaindefaultResponse;
import com.konfigthis.client.model.VerifiedDomainsGetInfo200Response;
import com.konfigthis.client.model.VerifiedDomainsGetInfoResponse;
import com.konfigthis.client.model.VerifiedDomainsGetInfodefaultResponse;
import com.konfigthis.client.model.VerifiedDomainsListSendingDomains200Response;
import com.konfigthis.client.model.VerifiedDomainsListSendingDomainsResponse;
import com.konfigthis.client.model.VerifiedDomainsListSendingDomainsdefaultResponse;
import com.konfigthis.client.model.VerifiedDomainsVerifyDomainForSending200Response;
import com.konfigthis.client.model.VerifiedDomainsVerifyDomainForSendingRequest;
import com.konfigthis.client.model.VerifiedDomainsVerifyDomainForSendingResponse;
import com.konfigthis.client.model.VerifiedDomainsVerifyDomainForSendingdefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerifiedDomainsApi
 */
@Disabled
public class VerifiedDomainsApiTest {

    private static VerifiedDomainsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new VerifiedDomainsApi(apiClient);
    }

    /**
     * Add domain to account
     *
     * Add a domain to the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addDomainToAccountTest() throws ApiException {
        String verificationEmail = null;
        VerifiedDomainsAddDomainToAccountResponse response = api.addDomainToAccount(verificationEmail)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete domain
     *
     * Delete a verified domain from the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDomainTest() throws ApiException {
        String domainName = null;
        api.deleteDomain(domainName)
                .execute();
        // TODO: test validations
    }

    /**
     * Get domain info
     *
     * Get the details for a single domain on the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInfoTest() throws ApiException {
        String domainName = null;
        VerifiedDomainsGetInfoResponse response = api.getInfo(domainName)
                .execute();
        // TODO: test validations
    }

    /**
     * List sending domains
     *
     * Get all of the sending domains on the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSendingDomainsTest() throws ApiException {
        VerifiedDomainsListSendingDomainsResponse response = api.listSendingDomains()
                .execute();
        // TODO: test validations
    }

    /**
     * Verify domain
     *
     * Verify a domain for sending.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyDomainForSendingTest() throws ApiException {
        String code = null;
        String domainName = null;
        VerifiedDomainsVerifyDomainForSendingResponse response = api.verifyDomainForSending(code, domainName)
                .execute();
        // TODO: test validations
    }

}
