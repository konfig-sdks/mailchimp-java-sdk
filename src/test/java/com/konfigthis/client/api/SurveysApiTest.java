/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.SurveysGenerateCampaign200Response;
import com.konfigthis.client.model.SurveysGenerateCampaignResponse;
import com.konfigthis.client.model.SurveysGenerateCampaigndefaultResponse;
import com.konfigthis.client.model.SurveysPublishSurveyActionResponse;
import com.konfigthis.client.model.SurveysPublishSurveyActiondefaultResponse;
import com.konfigthis.client.model.SurveysUnpublishSurveyActionResponse;
import com.konfigthis.client.model.SurveysUnpublishSurveyActiondefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SurveysApi
 */
@Disabled
public class SurveysApiTest {

    private static SurveysApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SurveysApi(apiClient);
    }

    /**
     * Create a Survey Campaign
     *
     * Utilize the List ID and Survey ID to generate a Campaign that links to your survey.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateCampaignTest() throws ApiException {
        String listId = null;
        String surveyId = null;
        SurveysGenerateCampaignResponse response = api.generateCampaign(listId, surveyId)
                .execute();
        // TODO: test validations
    }

    /**
     * Publish a Survey
     *
     * Publish a survey that is in draft, unpublished, or has been previously published and edited.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publishSurveyActionTest() throws ApiException {
        String listId = null;
        String surveyId = null;
        api.publishSurveyAction(listId, surveyId)
                .execute();
        // TODO: test validations
    }

    /**
     * Unpublish a Survey
     *
     * Unpublish a survey that has been published.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unpublishSurveyActionTest() throws ApiException {
        String listId = null;
        String surveyId = null;
        api.unpublishSurveyAction(listId, surveyId)
                .execute();
        // TODO: test validations
    }

}
