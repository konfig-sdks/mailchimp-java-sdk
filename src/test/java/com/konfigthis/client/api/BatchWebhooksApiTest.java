/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BatchWebhooksAddWebhook200Response;
import com.konfigthis.client.model.BatchWebhooksAddWebhookRequest;
import com.konfigthis.client.model.BatchWebhooksAddWebhookResponse;
import com.konfigthis.client.model.BatchWebhooksAddWebhookdefaultResponse;
import com.konfigthis.client.model.BatchWebhooksGetInfo200Response;
import com.konfigthis.client.model.BatchWebhooksGetInfoResponse;
import com.konfigthis.client.model.BatchWebhooksGetInfodefaultResponse;
import com.konfigthis.client.model.BatchWebhooksListWebhooks200Response;
import com.konfigthis.client.model.BatchWebhooksListWebhooksResponse;
import com.konfigthis.client.model.BatchWebhooksListWebhooksdefaultResponse;
import com.konfigthis.client.model.BatchWebhooksRemoveWebhookResponse;
import com.konfigthis.client.model.BatchWebhooksRemoveWebhookdefaultResponse;
import com.konfigthis.client.model.BatchWebhooksUpdateWebhook200Response;
import com.konfigthis.client.model.BatchWebhooksUpdateWebhookRequest;
import com.konfigthis.client.model.BatchWebhooksUpdateWebhookResponse;
import com.konfigthis.client.model.BatchWebhooksUpdateWebhookdefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BatchWebhooksApi
 */
@Disabled
public class BatchWebhooksApiTest {

    private static BatchWebhooksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BatchWebhooksApi(apiClient);
    }

    /**
     * Add batch webhook
     *
     * Configure a webhook that will fire whenever any batch request completes processing.  You may only have a maximum of 20 batch webhooks.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addWebhookTest() throws ApiException {
        String url = null;
        Boolean enabled = null;
        BatchWebhooksAddWebhookResponse response = api.addWebhook(url)
                .enabled(enabled)
                .execute();
        // TODO: test validations
    }

    /**
     * Get batch webhook info
     *
     * Get information about a specific batch webhook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInfoTest() throws ApiException {
        String batchWebhookId = null;
        List<String> fields = null;
        List<String> excludeFields = null;
        BatchWebhooksGetInfoResponse response = api.getInfo(batchWebhookId)
                .fields(fields)
                .excludeFields(excludeFields)
                .execute();
        // TODO: test validations
    }

    /**
     * List batch webhooks
     *
     * Get all webhooks that have been configured for batches.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWebhooksTest() throws ApiException {
        List<String> fields = null;
        List<String> excludeFields = null;
        Integer count = null;
        Integer offset = null;
        BatchWebhooksListWebhooksResponse response = api.listWebhooks()
                .fields(fields)
                .excludeFields(excludeFields)
                .count(count)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete batch webhook
     *
     * Remove a batch webhook. Webhooks will no longer be sent to the given URL.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeWebhookTest() throws ApiException {
        String batchWebhookId = null;
        api.removeWebhook(batchWebhookId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update batch webhook
     *
     * Update a webhook that will fire whenever any batch request completes processing.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhookTest() throws ApiException {
        String batchWebhookId = null;
        String url = null;
        Boolean enabled = null;
        BatchWebhooksUpdateWebhookResponse response = api.updateWebhook(batchWebhookId)
                .url(url)
                .enabled(enabled)
                .execute();
        // TODO: test validations
    }

}
