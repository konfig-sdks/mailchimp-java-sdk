/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ABTestOptionsProperty1;
import com.konfigthis.client.model.ABTestingOptionsProperty;
import com.konfigthis.client.model.CampaignDeliveryStatusProperty;
import com.konfigthis.client.model.CampaignReportSummaryProperty2;
import com.konfigthis.client.model.CampaignSettingsProperty4;
import com.konfigthis.client.model.CampaignSocialCardProperty;
import com.konfigthis.client.model.CampaignTrackingOptionsProperty;
import com.konfigthis.client.model.ListProperty17;
import com.konfigthis.client.model.RSSOptionsProperty2;
import com.konfigthis.client.model.ResendShortcutEligibilityProperty;
import com.konfigthis.client.model.ResourceLink;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CampaignsCreateNewMailchimpCampaignResponse
 */
public class CampaignsCreateNewMailchimpCampaignResponseTest {
    private final CampaignsCreateNewMailchimpCampaignResponse model = new CampaignsCreateNewMailchimpCampaignResponse();

    /**
     * Model tests for CampaignsCreateNewMailchimpCampaignResponse
     */
    @Test
    public void testCampaignsCreateNewMailchimpCampaignResponse() {
        // TODO: test CampaignsCreateNewMailchimpCampaignResponse
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'webId'
     */
    @Test
    public void webIdTest() {
        // TODO: test webId
    }

    /**
     * Test the property 'parentCampaignId'
     */
    @Test
    public void parentCampaignIdTest() {
        // TODO: test parentCampaignId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'archiveUrl'
     */
    @Test
    public void archiveUrlTest() {
        // TODO: test archiveUrl
    }

    /**
     * Test the property 'longArchiveUrl'
     */
    @Test
    public void longArchiveUrlTest() {
        // TODO: test longArchiveUrl
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'emailsSent'
     */
    @Test
    public void emailsSentTest() {
        // TODO: test emailsSent
    }

    /**
     * Test the property 'sendTime'
     */
    @Test
    public void sendTimeTest() {
        // TODO: test sendTime
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    public void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'needsBlockRefresh'
     */
    @Test
    public void needsBlockRefreshTest() {
        // TODO: test needsBlockRefresh
    }

    /**
     * Test the property 'resendable'
     */
    @Test
    public void resendableTest() {
        // TODO: test resendable
    }

    /**
     * Test the property 'recipients'
     */
    @Test
    public void recipientsTest() {
        // TODO: test recipients
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property 'variateSettings'
     */
    @Test
    public void variateSettingsTest() {
        // TODO: test variateSettings
    }

    /**
     * Test the property 'tracking'
     */
    @Test
    public void trackingTest() {
        // TODO: test tracking
    }

    /**
     * Test the property 'rssOpts'
     */
    @Test
    public void rssOptsTest() {
        // TODO: test rssOpts
    }

    /**
     * Test the property 'abSplitOpts'
     */
    @Test
    public void abSplitOptsTest() {
        // TODO: test abSplitOpts
    }

    /**
     * Test the property 'socialCard'
     */
    @Test
    public void socialCardTest() {
        // TODO: test socialCard
    }

    /**
     * Test the property 'reportSummary'
     */
    @Test
    public void reportSummaryTest() {
        // TODO: test reportSummary
    }

    /**
     * Test the property 'deliveryStatus'
     */
    @Test
    public void deliveryStatusTest() {
        // TODO: test deliveryStatus
    }

    /**
     * Test the property 'resendShortcutEligibility'
     */
    @Test
    public void resendShortcutEligibilityTest() {
        // TODO: test resendShortcutEligibility
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

}
