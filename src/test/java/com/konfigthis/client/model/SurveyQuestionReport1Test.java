/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ContactCountsProperty;
import com.konfigthis.client.model.MergeFieldProperty;
import com.konfigthis.client.model.OptionsPropertyInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for SurveyQuestionReport1
 */
public class SurveyQuestionReport1Test {
    private final SurveyQuestionReport1 model = new SurveyQuestionReport1();

    /**
     * Model tests for SurveyQuestionReport1
     */
    @Test
    public void testSurveyQuestionReport1() {
        // TODO: test SurveyQuestionReport1
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'surveyId'
     */
    @Test
    public void surveyIdTest() {
        // TODO: test surveyId
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'totalResponses'
     */
    @Test
    public void totalResponsesTest() {
        // TODO: test totalResponses
    }

    /**
     * Test the property 'isRequired'
     */
    @Test
    public void isRequiredTest() {
        // TODO: test isRequired
    }

    /**
     * Test the property 'hasOther'
     */
    @Test
    public void hasOtherTest() {
        // TODO: test hasOther
    }

    /**
     * Test the property 'otherLabel'
     */
    @Test
    public void otherLabelTest() {
        // TODO: test otherLabel
    }

    /**
     * Test the property 'averageRating'
     */
    @Test
    public void averageRatingTest() {
        // TODO: test averageRating
    }

    /**
     * Test the property 'rangeLowLabel'
     */
    @Test
    public void rangeLowLabelTest() {
        // TODO: test rangeLowLabel
    }

    /**
     * Test the property 'rangeHighLabel'
     */
    @Test
    public void rangeHighLabelTest() {
        // TODO: test rangeHighLabel
    }

    /**
     * Test the property 'placeholderLabel'
     */
    @Test
    public void placeholderLabelTest() {
        // TODO: test placeholderLabel
    }

    /**
     * Test the property 'subscribeCheckboxEnabled'
     */
    @Test
    public void subscribeCheckboxEnabledTest() {
        // TODO: test subscribeCheckboxEnabled
    }

    /**
     * Test the property 'subscribeCheckboxLabel'
     */
    @Test
    public void subscribeCheckboxLabelTest() {
        // TODO: test subscribeCheckboxLabel
    }

    /**
     * Test the property 'mergeField'
     */
    @Test
    public void mergeFieldTest() {
        // TODO: test mergeField
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'contactCounts'
     */
    @Test
    public void contactCountsTest() {
        // TODO: test contactCounts
    }

}
