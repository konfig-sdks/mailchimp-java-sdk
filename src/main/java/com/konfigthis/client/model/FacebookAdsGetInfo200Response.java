/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.FacebookAdsGetInfo200ResponseAllOf1Budget;
import com.konfigthis.client.model.FacebookAdsGetInfo200ResponseAllOf1Channel;
import com.konfigthis.client.model.FacebookAdsGetInfo200ResponseAllOf1Site;
import com.konfigthis.client.model.FacebookAdsGetInfoResponseAllOf2Audience;
import com.konfigthis.client.model.FacebookAdsGetInfoResponseAllOf2Content;
import com.konfigthis.client.model.FacebookAdsGetInfoResponseAllOf2Feedback;
import com.konfigthis.client.model.Recipients1;
import com.konfigthis.client.model.ReportSummary;
import com.konfigthis.client.model.ResourceLink1;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * FacebookAdsGetInfo200Response
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FacebookAdsGetInfo200Response {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_WEB_ID = "web_id";
  @SerializedName(SERIALIZED_NAME_WEB_ID)
  private Integer webId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * The type of outreach this object is.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    REGULAR("regular"),
    
    EMAIL_TOUCHPOINT("email-touchpoint"),
    
    PLAINTEXT("plaintext"),
    
    RSS("rss"),
    
    RECONFIRM("reconfirm"),
    
    VARIATE("variate"),
    
    ABSPLIT("absplit"),
    
    AUTOMATION("automation"),
    
    FACEBOOK("facebook"),
    
    GOOGLE("google"),
    
    AUTORESPONDER("autoresponder"),
    
    TRANSACTIONAL("transactional"),
    
    PAGE("page"),
    
    WEBSITE("website"),
    
    SOCIAL_POST("social_post"),
    
    SURVEY("survey"),
    
    CUSTOMER_JOURNEY("customer_journey"),
    
    SMS("sms");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  /**
   * The status of this outreach.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
 public enum StatusEnum {
    SAVE("save"),
    
    PAUSED("paused"),
    
    SCHEDULE("schedule"),
    
    SCHEDULED("scheduled"),
    
    SENDING("sending"),
    
    SENT("sent"),
    
    CANCELED("canceled"),
    
    CANCELING("canceling"),
    
    ACTIVE("active"),
    
    DISCONNECTED("disconnected"),
    
    SOMEPAUSED("somepaused"),
    
    DRAFT("draft"),
    
    COMPLETED("completed"),
    
    PARTIALREJECTED("partialRejected"),
    
    PENDING("pending"),
    
    REJECTED("rejected"),
    
    PUBLISHED("published"),
    
    UNPUBLISHED("unpublished");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_SHOW_REPORT = "show_report";
  @SerializedName(SERIALIZED_NAME_SHOW_REPORT)
  private Boolean showReport;

  public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private OffsetDateTime createTime;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_CANCELED_AT = "canceled_at";
  @SerializedName(SERIALIZED_NAME_CANCELED_AT)
  private OffsetDateTime canceledAt;

  public static final String SERIALIZED_NAME_PUBLISHED_TIME = "published_time";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_TIME)
  private OffsetDateTime publishedTime;

  public static final String SERIALIZED_NAME_HAS_SEGMENT = "has_segment";
  @SerializedName(SERIALIZED_NAME_HAS_SEGMENT)
  private Boolean hasSegment;

  public static final String SERIALIZED_NAME_REPORT_SUMMARY = "report_summary";
  @SerializedName(SERIALIZED_NAME_REPORT_SUMMARY)
  private ReportSummary reportSummary;

  public static final String SERIALIZED_NAME_RECIPIENTS = "recipients";
  @SerializedName(SERIALIZED_NAME_RECIPIENTS)
  private Recipients1 recipients;

  public static final String SERIALIZED_NAME_THUMBNAIL = "thumbnail";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL)
  private String thumbnail;

  public static final String SERIALIZED_NAME_EMAIL_SOURCE_NAME = "email_source_name";
  @SerializedName(SERIALIZED_NAME_EMAIL_SOURCE_NAME)
  private String emailSourceName;

  public static final String SERIALIZED_NAME_PAUSED_AT = "paused_at";
  @SerializedName(SERIALIZED_NAME_PAUSED_AT)
  private OffsetDateTime pausedAt;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_NEEDS_ATTENTION = "needs_attention";
  @SerializedName(SERIALIZED_NAME_NEEDS_ATTENTION)
  private Boolean needsAttention;

  public static final String SERIALIZED_NAME_WAS_CANCELED_BY_FACEBOOK = "was_canceled_by_facebook";
  @SerializedName(SERIALIZED_NAME_WAS_CANCELED_BY_FACEBOOK)
  private Boolean wasCanceledByFacebook;

  public static final String SERIALIZED_NAME_IS_CONNECTED = "is_connected";
  @SerializedName(SERIALIZED_NAME_IS_CONNECTED)
  private Boolean isConnected;

  public static final String SERIALIZED_NAME_HAS_AUDIENCE = "has_audience";
  @SerializedName(SERIALIZED_NAME_HAS_AUDIENCE)
  private Boolean hasAudience;

  public static final String SERIALIZED_NAME_HAS_CONTENT = "has_content";
  @SerializedName(SERIALIZED_NAME_HAS_CONTENT)
  private Boolean hasContent;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private FacebookAdsGetInfo200ResponseAllOf1Channel channel;

  public static final String SERIALIZED_NAME_FEEDBACK = "feedback";
  @SerializedName(SERIALIZED_NAME_FEEDBACK)
  private FacebookAdsGetInfoResponseAllOf2Feedback feedback;

  public static final String SERIALIZED_NAME_SITE = "site";
  @SerializedName(SERIALIZED_NAME_SITE)
  private FacebookAdsGetInfo200ResponseAllOf1Site site;

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  private FacebookAdsGetInfoResponseAllOf2Audience audience;

  public static final String SERIALIZED_NAME_BUDGET = "budget";
  @SerializedName(SERIALIZED_NAME_BUDGET)
  private FacebookAdsGetInfo200ResponseAllOf1Budget budget;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private FacebookAdsGetInfoResponseAllOf2Content content;

  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<ResourceLink1> links = null;

  public FacebookAdsGetInfo200Response() {
  }

  
  public FacebookAdsGetInfo200Response(
     List<ResourceLink1> links
  ) {
    this();
    this.links = links;
  }

  public FacebookAdsGetInfo200Response id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Unique ID of an Outreach.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID of an Outreach.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public FacebookAdsGetInfo200Response webId(Integer webId) {
    
    
    
    
    this.webId = webId;
    return this;
  }

   /**
   * The ID used in the Mailchimp web application. For example, for a &#x60;regular&#x60; outreach, you can view this campaign in your Mailchimp account at &#x60;https://{dc}.admin.mailchimp.com/campaigns/show/?id&#x3D;{web_id}&#x60;.
   * @return webId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID used in the Mailchimp web application. For example, for a `regular` outreach, you can view this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.")

  public Integer getWebId() {
    return webId;
  }


  public void setWebId(Integer webId) {
    
    
    
    this.webId = webId;
  }


  public FacebookAdsGetInfo200Response name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Title or name of an Outreach.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Title or name of an Outreach.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public FacebookAdsGetInfo200Response type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * The type of outreach this object is.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of outreach this object is.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }


  public FacebookAdsGetInfo200Response status(StatusEnum status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * The status of this outreach.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of this outreach.")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    
    
    
    this.status = status;
  }


  public FacebookAdsGetInfo200Response showReport(Boolean showReport) {
    
    
    
    
    this.showReport = showReport;
    return this;
  }

   /**
   * Outreach report availability. Note: This property is hotly debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371) for more context.
   * @return showReport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Outreach report availability. Note: This property is hotly debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371) for more context.")

  public Boolean getShowReport() {
    return showReport;
  }


  public void setShowReport(Boolean showReport) {
    
    
    
    this.showReport = showReport;
  }


  public FacebookAdsGetInfo200Response createTime(OffsetDateTime createTime) {
    
    
    
    
    this.createTime = createTime;
    return this;
  }

   /**
   * The date and time the outreach was created in ISO 8601 format.
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the outreach was created in ISO 8601 format.")

  public OffsetDateTime getCreateTime() {
    return createTime;
  }


  public void setCreateTime(OffsetDateTime createTime) {
    
    
    
    this.createTime = createTime;
  }


  public FacebookAdsGetInfo200Response startTime(OffsetDateTime startTime) {
    
    
    
    
    this.startTime = startTime;
    return this;
  }

   /**
   * The date and time the outreach was started in ISO 8601 format.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the outreach was started in ISO 8601 format.")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    
    
    
    this.startTime = startTime;
  }


  public FacebookAdsGetInfo200Response updatedAt(OffsetDateTime updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date and time the outreach was last updated in ISO 8601 format.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the outreach was last updated in ISO 8601 format.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }


  public FacebookAdsGetInfo200Response canceledAt(OffsetDateTime canceledAt) {
    
    
    
    
    this.canceledAt = canceledAt;
    return this;
  }

   /**
   * The date and time the outreach was canceled in ISO 8601 format.
   * @return canceledAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the outreach was canceled in ISO 8601 format.")

  public OffsetDateTime getCanceledAt() {
    return canceledAt;
  }


  public void setCanceledAt(OffsetDateTime canceledAt) {
    
    
    
    this.canceledAt = canceledAt;
  }


  public FacebookAdsGetInfo200Response publishedTime(OffsetDateTime publishedTime) {
    
    
    
    
    this.publishedTime = publishedTime;
    return this;
  }

   /**
   * The date and time the outreach was (or will be) published in ISO 8601 format.
   * @return publishedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the outreach was (or will be) published in ISO 8601 format.")

  public OffsetDateTime getPublishedTime() {
    return publishedTime;
  }


  public void setPublishedTime(OffsetDateTime publishedTime) {
    
    
    
    this.publishedTime = publishedTime;
  }


  public FacebookAdsGetInfo200Response hasSegment(Boolean hasSegment) {
    
    
    
    
    this.hasSegment = hasSegment;
    return this;
  }

   /**
   * If this outreach targets a segment of your audience.
   * @return hasSegment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this outreach targets a segment of your audience.")

  public Boolean getHasSegment() {
    return hasSegment;
  }


  public void setHasSegment(Boolean hasSegment) {
    
    
    
    this.hasSegment = hasSegment;
  }


  public FacebookAdsGetInfo200Response reportSummary(ReportSummary reportSummary) {
    
    
    
    
    this.reportSummary = reportSummary;
    return this;
  }

   /**
   * Get reportSummary
   * @return reportSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReportSummary getReportSummary() {
    return reportSummary;
  }


  public void setReportSummary(ReportSummary reportSummary) {
    
    
    
    this.reportSummary = reportSummary;
  }


  public FacebookAdsGetInfo200Response recipients(Recipients1 recipients) {
    
    
    
    
    this.recipients = recipients;
    return this;
  }

   /**
   * Get recipients
   * @return recipients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Recipients1 getRecipients() {
    return recipients;
  }


  public void setRecipients(Recipients1 recipients) {
    
    
    
    this.recipients = recipients;
  }


  public FacebookAdsGetInfo200Response thumbnail(String thumbnail) {
    
    
    
    
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * The URL of the thumbnail for this outreach.
   * @return thumbnail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of the thumbnail for this outreach.")

  public String getThumbnail() {
    return thumbnail;
  }


  public void setThumbnail(String thumbnail) {
    
    
    
    this.thumbnail = thumbnail;
  }


  public FacebookAdsGetInfo200Response emailSourceName(String emailSourceName) {
    
    
    
    
    this.emailSourceName = emailSourceName;
    return this;
  }

   /**
   * Get emailSourceName
   * @return emailSourceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmailSourceName() {
    return emailSourceName;
  }


  public void setEmailSourceName(String emailSourceName) {
    
    
    
    this.emailSourceName = emailSourceName;
  }


  public FacebookAdsGetInfo200Response pausedAt(OffsetDateTime pausedAt) {
    
    
    
    
    this.pausedAt = pausedAt;
    return this;
  }

   /**
   * The date and time the ad was paused in ISO 8601 format.
   * @return pausedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the ad was paused in ISO 8601 format.")

  public OffsetDateTime getPausedAt() {
    return pausedAt;
  }


  public void setPausedAt(OffsetDateTime pausedAt) {
    
    
    
    this.pausedAt = pausedAt;
  }


  public FacebookAdsGetInfo200Response endTime(OffsetDateTime endTime) {
    
    
    
    
    this.endTime = endTime;
    return this;
  }

   /**
   * The date and time the ad was ended in ISO 8601 format.
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the ad was ended in ISO 8601 format.")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    
    
    
    this.endTime = endTime;
  }


  public FacebookAdsGetInfo200Response needsAttention(Boolean needsAttention) {
    
    
    
    
    this.needsAttention = needsAttention;
    return this;
  }

   /**
   * If the ad has a problem and needs attention.
   * @return needsAttention
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the ad has a problem and needs attention.")

  public Boolean getNeedsAttention() {
    return needsAttention;
  }


  public void setNeedsAttention(Boolean needsAttention) {
    
    
    
    this.needsAttention = needsAttention;
  }


  public FacebookAdsGetInfo200Response wasCanceledByFacebook(Boolean wasCanceledByFacebook) {
    
    
    
    
    this.wasCanceledByFacebook = wasCanceledByFacebook;
    return this;
  }

   /**
   * Get wasCanceledByFacebook
   * @return wasCanceledByFacebook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWasCanceledByFacebook() {
    return wasCanceledByFacebook;
  }


  public void setWasCanceledByFacebook(Boolean wasCanceledByFacebook) {
    
    
    
    this.wasCanceledByFacebook = wasCanceledByFacebook;
  }


  public FacebookAdsGetInfo200Response isConnected(Boolean isConnected) {
    
    
    
    
    this.isConnected = isConnected;
    return this;
  }

   /**
   * Check if this ad is connected to a facebook page
   * @return isConnected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Check if this ad is connected to a facebook page")

  public Boolean getIsConnected() {
    return isConnected;
  }


  public void setIsConnected(Boolean isConnected) {
    
    
    
    this.isConnected = isConnected;
  }


  public FacebookAdsGetInfo200Response hasAudience(Boolean hasAudience) {
    
    
    
    
    this.hasAudience = hasAudience;
    return this;
  }

   /**
   * Check if this ad has audience setup
   * @return hasAudience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Check if this ad has audience setup")

  public Boolean getHasAudience() {
    return hasAudience;
  }


  public void setHasAudience(Boolean hasAudience) {
    
    
    
    this.hasAudience = hasAudience;
  }


  public FacebookAdsGetInfo200Response hasContent(Boolean hasContent) {
    
    
    
    
    this.hasContent = hasContent;
    return this;
  }

   /**
   * Check if this ad has content
   * @return hasContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Check if this ad has content")

  public Boolean getHasContent() {
    return hasContent;
  }


  public void setHasContent(Boolean hasContent) {
    
    
    
    this.hasContent = hasContent;
  }


  public FacebookAdsGetInfo200Response channel(FacebookAdsGetInfo200ResponseAllOf1Channel channel) {
    
    
    
    
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FacebookAdsGetInfo200ResponseAllOf1Channel getChannel() {
    return channel;
  }


  public void setChannel(FacebookAdsGetInfo200ResponseAllOf1Channel channel) {
    
    
    
    this.channel = channel;
  }


  public FacebookAdsGetInfo200Response feedback(FacebookAdsGetInfoResponseAllOf2Feedback feedback) {
    
    
    
    
    this.feedback = feedback;
    return this;
  }

   /**
   * Get feedback
   * @return feedback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FacebookAdsGetInfoResponseAllOf2Feedback getFeedback() {
    return feedback;
  }


  public void setFeedback(FacebookAdsGetInfoResponseAllOf2Feedback feedback) {
    
    
    
    this.feedback = feedback;
  }


  public FacebookAdsGetInfo200Response site(FacebookAdsGetInfo200ResponseAllOf1Site site) {
    
    
    
    
    this.site = site;
    return this;
  }

   /**
   * Get site
   * @return site
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FacebookAdsGetInfo200ResponseAllOf1Site getSite() {
    return site;
  }


  public void setSite(FacebookAdsGetInfo200ResponseAllOf1Site site) {
    
    
    
    this.site = site;
  }


  public FacebookAdsGetInfo200Response audience(FacebookAdsGetInfoResponseAllOf2Audience audience) {
    
    
    
    
    this.audience = audience;
    return this;
  }

   /**
   * Get audience
   * @return audience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FacebookAdsGetInfoResponseAllOf2Audience getAudience() {
    return audience;
  }


  public void setAudience(FacebookAdsGetInfoResponseAllOf2Audience audience) {
    
    
    
    this.audience = audience;
  }


  public FacebookAdsGetInfo200Response budget(FacebookAdsGetInfo200ResponseAllOf1Budget budget) {
    
    
    
    
    this.budget = budget;
    return this;
  }

   /**
   * Get budget
   * @return budget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FacebookAdsGetInfo200ResponseAllOf1Budget getBudget() {
    return budget;
  }


  public void setBudget(FacebookAdsGetInfo200ResponseAllOf1Budget budget) {
    
    
    
    this.budget = budget;
  }


  public FacebookAdsGetInfo200Response content(FacebookAdsGetInfoResponseAllOf2Content content) {
    
    
    
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FacebookAdsGetInfoResponseAllOf2Content getContent() {
    return content;
  }


  public void setContent(FacebookAdsGetInfoResponseAllOf2Content content) {
    
    
    
    this.content = content;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of link types and descriptions for the API schema documents.")

  public List<ResourceLink1> getLinks() {
    return links;
  }



  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FacebookAdsGetInfo200Response instance itself
   */
  public FacebookAdsGetInfo200Response putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FacebookAdsGetInfo200Response facebookAdsGetInfo200Response = (FacebookAdsGetInfo200Response) o;
    return Objects.equals(this.id, facebookAdsGetInfo200Response.id) &&
        Objects.equals(this.webId, facebookAdsGetInfo200Response.webId) &&
        Objects.equals(this.name, facebookAdsGetInfo200Response.name) &&
        Objects.equals(this.type, facebookAdsGetInfo200Response.type) &&
        Objects.equals(this.status, facebookAdsGetInfo200Response.status) &&
        Objects.equals(this.showReport, facebookAdsGetInfo200Response.showReport) &&
        Objects.equals(this.createTime, facebookAdsGetInfo200Response.createTime) &&
        Objects.equals(this.startTime, facebookAdsGetInfo200Response.startTime) &&
        Objects.equals(this.updatedAt, facebookAdsGetInfo200Response.updatedAt) &&
        Objects.equals(this.canceledAt, facebookAdsGetInfo200Response.canceledAt) &&
        Objects.equals(this.publishedTime, facebookAdsGetInfo200Response.publishedTime) &&
        Objects.equals(this.hasSegment, facebookAdsGetInfo200Response.hasSegment) &&
        Objects.equals(this.reportSummary, facebookAdsGetInfo200Response.reportSummary) &&
        Objects.equals(this.recipients, facebookAdsGetInfo200Response.recipients) &&
        Objects.equals(this.thumbnail, facebookAdsGetInfo200Response.thumbnail) &&
        Objects.equals(this.emailSourceName, facebookAdsGetInfo200Response.emailSourceName) &&
        Objects.equals(this.pausedAt, facebookAdsGetInfo200Response.pausedAt) &&
        Objects.equals(this.endTime, facebookAdsGetInfo200Response.endTime) &&
        Objects.equals(this.needsAttention, facebookAdsGetInfo200Response.needsAttention) &&
        Objects.equals(this.wasCanceledByFacebook, facebookAdsGetInfo200Response.wasCanceledByFacebook) &&
        Objects.equals(this.isConnected, facebookAdsGetInfo200Response.isConnected) &&
        Objects.equals(this.hasAudience, facebookAdsGetInfo200Response.hasAudience) &&
        Objects.equals(this.hasContent, facebookAdsGetInfo200Response.hasContent) &&
        Objects.equals(this.channel, facebookAdsGetInfo200Response.channel) &&
        Objects.equals(this.feedback, facebookAdsGetInfo200Response.feedback) &&
        Objects.equals(this.site, facebookAdsGetInfo200Response.site) &&
        Objects.equals(this.audience, facebookAdsGetInfo200Response.audience) &&
        Objects.equals(this.budget, facebookAdsGetInfo200Response.budget) &&
        Objects.equals(this.content, facebookAdsGetInfo200Response.content) &&
        Objects.equals(this.links, facebookAdsGetInfo200Response.links)&&
        Objects.equals(this.additionalProperties, facebookAdsGetInfo200Response.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, webId, name, type, status, showReport, createTime, startTime, updatedAt, canceledAt, publishedTime, hasSegment, reportSummary, recipients, thumbnail, emailSourceName, pausedAt, endTime, needsAttention, wasCanceledByFacebook, isConnected, hasAudience, hasContent, channel, feedback, site, audience, budget, content, links, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FacebookAdsGetInfo200Response {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    webId: ").append(toIndentedString(webId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    showReport: ").append(toIndentedString(showReport)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    canceledAt: ").append(toIndentedString(canceledAt)).append("\n");
    sb.append("    publishedTime: ").append(toIndentedString(publishedTime)).append("\n");
    sb.append("    hasSegment: ").append(toIndentedString(hasSegment)).append("\n");
    sb.append("    reportSummary: ").append(toIndentedString(reportSummary)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    emailSourceName: ").append(toIndentedString(emailSourceName)).append("\n");
    sb.append("    pausedAt: ").append(toIndentedString(pausedAt)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    needsAttention: ").append(toIndentedString(needsAttention)).append("\n");
    sb.append("    wasCanceledByFacebook: ").append(toIndentedString(wasCanceledByFacebook)).append("\n");
    sb.append("    isConnected: ").append(toIndentedString(isConnected)).append("\n");
    sb.append("    hasAudience: ").append(toIndentedString(hasAudience)).append("\n");
    sb.append("    hasContent: ").append(toIndentedString(hasContent)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("web_id");
    openapiFields.add("name");
    openapiFields.add("type");
    openapiFields.add("status");
    openapiFields.add("show_report");
    openapiFields.add("create_time");
    openapiFields.add("start_time");
    openapiFields.add("updated_at");
    openapiFields.add("canceled_at");
    openapiFields.add("published_time");
    openapiFields.add("has_segment");
    openapiFields.add("report_summary");
    openapiFields.add("recipients");
    openapiFields.add("thumbnail");
    openapiFields.add("email_source_name");
    openapiFields.add("paused_at");
    openapiFields.add("end_time");
    openapiFields.add("needs_attention");
    openapiFields.add("was_canceled_by_facebook");
    openapiFields.add("is_connected");
    openapiFields.add("has_audience");
    openapiFields.add("has_content");
    openapiFields.add("channel");
    openapiFields.add("feedback");
    openapiFields.add("site");
    openapiFields.add("audience");
    openapiFields.add("budget");
    openapiFields.add("content");
    openapiFields.add("_links");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FacebookAdsGetInfo200Response
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FacebookAdsGetInfo200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FacebookAdsGetInfo200Response is not found in the empty JSON string", FacebookAdsGetInfo200Response.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `report_summary`
      if (jsonObj.get("report_summary") != null && !jsonObj.get("report_summary").isJsonNull()) {
        ReportSummary.validateJsonObject(jsonObj.getAsJsonObject("report_summary"));
      }
      // validate the optional field `recipients`
      if (jsonObj.get("recipients") != null && !jsonObj.get("recipients").isJsonNull()) {
        Recipients1.validateJsonObject(jsonObj.getAsJsonObject("recipients"));
      }
      if ((jsonObj.get("thumbnail") != null && !jsonObj.get("thumbnail").isJsonNull()) && !jsonObj.get("thumbnail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnail").toString()));
      }
      if ((jsonObj.get("email_source_name") != null && !jsonObj.get("email_source_name").isJsonNull()) && !jsonObj.get("email_source_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_source_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_source_name").toString()));
      }
      // validate the optional field `channel`
      if (jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) {
        FacebookAdsGetInfo200ResponseAllOf1Channel.validateJsonObject(jsonObj.getAsJsonObject("channel"));
      }
      // validate the optional field `feedback`
      if (jsonObj.get("feedback") != null && !jsonObj.get("feedback").isJsonNull()) {
        FacebookAdsGetInfoResponseAllOf2Feedback.validateJsonObject(jsonObj.getAsJsonObject("feedback"));
      }
      // validate the optional field `site`
      if (jsonObj.get("site") != null && !jsonObj.get("site").isJsonNull()) {
        FacebookAdsGetInfo200ResponseAllOf1Site.validateJsonObject(jsonObj.getAsJsonObject("site"));
      }
      // validate the optional field `audience`
      if (jsonObj.get("audience") != null && !jsonObj.get("audience").isJsonNull()) {
        FacebookAdsGetInfoResponseAllOf2Audience.validateJsonObject(jsonObj.getAsJsonObject("audience"));
      }
      // validate the optional field `budget`
      if (jsonObj.get("budget") != null && !jsonObj.get("budget").isJsonNull()) {
        FacebookAdsGetInfo200ResponseAllOf1Budget.validateJsonObject(jsonObj.getAsJsonObject("budget"));
      }
      // validate the optional field `content`
      if (jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) {
        FacebookAdsGetInfoResponseAllOf2Content.validateJsonObject(jsonObj.getAsJsonObject("content"));
      }
      if (jsonObj.get("_links") != null && !jsonObj.get("_links").isJsonNull()) {
        JsonArray jsonArraylinks = jsonObj.getAsJsonArray("_links");
        if (jsonArraylinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("_links").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `_links` to be an array in the JSON string but got `%s`", jsonObj.get("_links").toString()));
          }

          // validate the optional field `_links` (array)
          for (int i = 0; i < jsonArraylinks.size(); i++) {
            ResourceLink1.validateJsonObject(jsonArraylinks.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FacebookAdsGetInfo200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FacebookAdsGetInfo200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FacebookAdsGetInfo200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FacebookAdsGetInfo200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<FacebookAdsGetInfo200Response>() {
           @Override
           public void write(JsonWriter out, FacebookAdsGetInfo200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FacebookAdsGetInfo200Response read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FacebookAdsGetInfo200Response instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FacebookAdsGetInfo200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FacebookAdsGetInfo200Response
  * @throws IOException if the JSON string is invalid with respect to FacebookAdsGetInfo200Response
  */
  public static FacebookAdsGetInfo200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FacebookAdsGetInfo200Response.class);
  }

 /**
  * Convert an instance of FacebookAdsGetInfo200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

