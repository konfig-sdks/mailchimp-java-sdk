/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * The settings for the Automation workflow.
 */
@ApiModel(description = "The settings for the Automation workflow.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AutomationCampaignSettingsProperty1 {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_FROM_NAME = "from_name";
  @SerializedName(SERIALIZED_NAME_FROM_NAME)
  private String fromName;

  public static final String SERIALIZED_NAME_REPLY_TO = "reply_to";
  @SerializedName(SERIALIZED_NAME_REPLY_TO)
  private String replyTo;

  public static final String SERIALIZED_NAME_USE_CONVERSATION = "use_conversation";
  @SerializedName(SERIALIZED_NAME_USE_CONVERSATION)
  private Boolean useConversation;

  public static final String SERIALIZED_NAME_TO_NAME = "to_name";
  @SerializedName(SERIALIZED_NAME_TO_NAME)
  private String toName;

  public static final String SERIALIZED_NAME_AUTHENTICATE = "authenticate";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATE)
  private Boolean authenticate;

  public static final String SERIALIZED_NAME_AUTO_FOOTER = "auto_footer";
  @SerializedName(SERIALIZED_NAME_AUTO_FOOTER)
  private Boolean autoFooter;

  public static final String SERIALIZED_NAME_INLINE_CSS = "inline_css";
  @SerializedName(SERIALIZED_NAME_INLINE_CSS)
  private Boolean inlineCss;

  public AutomationCampaignSettingsProperty1() {
  }

  public AutomationCampaignSettingsProperty1 title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * The title of the Automation.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The title of the Automation.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public AutomationCampaignSettingsProperty1 fromName(String fromName) {
    
    
    
    
    this.fromName = fromName;
    return this;
  }

   /**
   * The &#39;from&#39; name for the Automation (not an email address).
   * @return fromName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The 'from' name for the Automation (not an email address).")

  public String getFromName() {
    return fromName;
  }


  public void setFromName(String fromName) {
    
    
    
    this.fromName = fromName;
  }


  public AutomationCampaignSettingsProperty1 replyTo(String replyTo) {
    
    
    
    
    this.replyTo = replyTo;
    return this;
  }

   /**
   * The reply-to email address for the Automation.
   * @return replyTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reply-to email address for the Automation.")

  public String getReplyTo() {
    return replyTo;
  }


  public void setReplyTo(String replyTo) {
    
    
    
    this.replyTo = replyTo;
  }


  public AutomationCampaignSettingsProperty1 useConversation(Boolean useConversation) {
    
    
    
    
    this.useConversation = useConversation;
    return this;
  }

   /**
   * Whether to use Mailchimp Conversation feature to manage replies
   * @return useConversation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to use Mailchimp Conversation feature to manage replies")

  public Boolean getUseConversation() {
    return useConversation;
  }


  public void setUseConversation(Boolean useConversation) {
    
    
    
    this.useConversation = useConversation;
  }


  public AutomationCampaignSettingsProperty1 toName(String toName) {
    
    
    
    
    this.toName = toName;
    return this;
  }

   /**
   * The Automation&#39;s custom &#39;To&#39; name, typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
   * @return toName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Automation's custom 'To' name, typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).")

  public String getToName() {
    return toName;
  }


  public void setToName(String toName) {
    
    
    
    this.toName = toName;
  }


  public AutomationCampaignSettingsProperty1 authenticate(Boolean authenticate) {
    
    
    
    
    this.authenticate = authenticate;
    return this;
  }

   /**
   * Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the Automation. Defaults to &#x60;true&#x60;.
   * @return authenticate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the Automation. Defaults to `true`.")

  public Boolean getAuthenticate() {
    return authenticate;
  }


  public void setAuthenticate(Boolean authenticate) {
    
    
    
    this.authenticate = authenticate;
  }


  public AutomationCampaignSettingsProperty1 autoFooter(Boolean autoFooter) {
    
    
    
    
    this.autoFooter = autoFooter;
    return this;
  }

   /**
   * Whether to automatically append Mailchimp&#39;s [default footer](https://mailchimp.com/help/about-campaign-footers/) to the Automation.
   * @return autoFooter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the Automation.")

  public Boolean getAutoFooter() {
    return autoFooter;
  }


  public void setAutoFooter(Boolean autoFooter) {
    
    
    
    this.autoFooter = autoFooter;
  }


  public AutomationCampaignSettingsProperty1 inlineCss(Boolean inlineCss) {
    
    
    
    
    this.inlineCss = inlineCss;
    return this;
  }

   /**
   * Whether to automatically inline the CSS included with the Automation content.
   * @return inlineCss
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to automatically inline the CSS included with the Automation content.")

  public Boolean getInlineCss() {
    return inlineCss;
  }


  public void setInlineCss(Boolean inlineCss) {
    
    
    
    this.inlineCss = inlineCss;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AutomationCampaignSettingsProperty1 instance itself
   */
  public AutomationCampaignSettingsProperty1 putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationCampaignSettingsProperty1 automationCampaignSettingsProperty1 = (AutomationCampaignSettingsProperty1) o;
    return Objects.equals(this.title, automationCampaignSettingsProperty1.title) &&
        Objects.equals(this.fromName, automationCampaignSettingsProperty1.fromName) &&
        Objects.equals(this.replyTo, automationCampaignSettingsProperty1.replyTo) &&
        Objects.equals(this.useConversation, automationCampaignSettingsProperty1.useConversation) &&
        Objects.equals(this.toName, automationCampaignSettingsProperty1.toName) &&
        Objects.equals(this.authenticate, automationCampaignSettingsProperty1.authenticate) &&
        Objects.equals(this.autoFooter, automationCampaignSettingsProperty1.autoFooter) &&
        Objects.equals(this.inlineCss, automationCampaignSettingsProperty1.inlineCss)&&
        Objects.equals(this.additionalProperties, automationCampaignSettingsProperty1.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, fromName, replyTo, useConversation, toName, authenticate, autoFooter, inlineCss, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationCampaignSettingsProperty1 {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    useConversation: ").append(toIndentedString(useConversation)).append("\n");
    sb.append("    toName: ").append(toIndentedString(toName)).append("\n");
    sb.append("    authenticate: ").append(toIndentedString(authenticate)).append("\n");
    sb.append("    autoFooter: ").append(toIndentedString(autoFooter)).append("\n");
    sb.append("    inlineCss: ").append(toIndentedString(inlineCss)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("from_name");
    openapiFields.add("reply_to");
    openapiFields.add("use_conversation");
    openapiFields.add("to_name");
    openapiFields.add("authenticate");
    openapiFields.add("auto_footer");
    openapiFields.add("inline_css");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AutomationCampaignSettingsProperty1
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AutomationCampaignSettingsProperty1.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomationCampaignSettingsProperty1 is not found in the empty JSON string", AutomationCampaignSettingsProperty1.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("from_name") != null && !jsonObj.get("from_name").isJsonNull()) && !jsonObj.get("from_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_name").toString()));
      }
      if ((jsonObj.get("reply_to") != null && !jsonObj.get("reply_to").isJsonNull()) && !jsonObj.get("reply_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reply_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reply_to").toString()));
      }
      if ((jsonObj.get("to_name") != null && !jsonObj.get("to_name").isJsonNull()) && !jsonObj.get("to_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomationCampaignSettingsProperty1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomationCampaignSettingsProperty1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomationCampaignSettingsProperty1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomationCampaignSettingsProperty1.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomationCampaignSettingsProperty1>() {
           @Override
           public void write(JsonWriter out, AutomationCampaignSettingsProperty1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomationCampaignSettingsProperty1 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AutomationCampaignSettingsProperty1 instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AutomationCampaignSettingsProperty1 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AutomationCampaignSettingsProperty1
  * @throws IOException if the JSON string is invalid with respect to AutomationCampaignSettingsProperty1
  */
  public static AutomationCampaignSettingsProperty1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomationCampaignSettingsProperty1.class);
  }

 /**
  * Convert an instance of AutomationCampaignSettingsProperty1 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

