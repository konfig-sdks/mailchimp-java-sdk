/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.FacebookAdsListAdsResponseFacebookAdsInnerAllOf2Audience;
import com.konfigthis.client.model.ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Budget;
import com.konfigthis.client.model.ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Channel;
import com.konfigthis.client.model.ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1AudienceActivity;
import com.konfigthis.client.model.ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1ReportSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 {
  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Channel channel;

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  private FacebookAdsListAdsResponseFacebookAdsInnerAllOf2Audience audience;

  public static final String SERIALIZED_NAME_BUDGET = "budget";
  @SerializedName(SERIALIZED_NAME_BUDGET)
  private ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Budget budget;

  public static final String SERIALIZED_NAME_REPORT_SUMMARY = "report_summary";
  @SerializedName(SERIALIZED_NAME_REPORT_SUMMARY)
  private ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1ReportSummary reportSummary;

  public static final String SERIALIZED_NAME_AUDIENCE_ACTIVITY = "audience_activity";
  @SerializedName(SERIALIZED_NAME_AUDIENCE_ACTIVITY)
  private ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1AudienceActivity audienceActivity;

  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1() {
  }

  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 channel(ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Channel channel) {
    
    
    
    
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Channel getChannel() {
    return channel;
  }


  public void setChannel(ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Channel channel) {
    
    
    
    this.channel = channel;
  }


  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 audience(FacebookAdsListAdsResponseFacebookAdsInnerAllOf2Audience audience) {
    
    
    
    
    this.audience = audience;
    return this;
  }

   /**
   * Get audience
   * @return audience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2Audience getAudience() {
    return audience;
  }


  public void setAudience(FacebookAdsListAdsResponseFacebookAdsInnerAllOf2Audience audience) {
    
    
    
    this.audience = audience;
  }


  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 budget(ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Budget budget) {
    
    
    
    
    this.budget = budget;
    return this;
  }

   /**
   * Get budget
   * @return budget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Budget getBudget() {
    return budget;
  }


  public void setBudget(ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Budget budget) {
    
    
    
    this.budget = budget;
  }


  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 reportSummary(ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1ReportSummary reportSummary) {
    
    
    
    
    this.reportSummary = reportSummary;
    return this;
  }

   /**
   * Get reportSummary
   * @return reportSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1ReportSummary getReportSummary() {
    return reportSummary;
  }


  public void setReportSummary(ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1ReportSummary reportSummary) {
    
    
    
    this.reportSummary = reportSummary;
  }


  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 audienceActivity(ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1AudienceActivity audienceActivity) {
    
    
    
    
    this.audienceActivity = audienceActivity;
    return this;
  }

   /**
   * Get audienceActivity
   * @return audienceActivity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1AudienceActivity getAudienceActivity() {
    return audienceActivity;
  }


  public void setAudienceActivity(ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1AudienceActivity audienceActivity) {
    
    
    
    this.audienceActivity = audienceActivity;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 instance itself
   */
  public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 reportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 = (ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1) o;
    return Objects.equals(this.channel, reportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.channel) &&
        Objects.equals(this.audience, reportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.audience) &&
        Objects.equals(this.budget, reportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.budget) &&
        Objects.equals(this.reportSummary, reportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.reportSummary) &&
        Objects.equals(this.audienceActivity, reportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.audienceActivity)&&
        Objects.equals(this.additionalProperties, reportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channel, audience, budget, reportSummary, audienceActivity, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 {\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("    reportSummary: ").append(toIndentedString(reportSummary)).append("\n");
    sb.append("    audienceActivity: ").append(toIndentedString(audienceActivity)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("channel");
    openapiFields.add("audience");
    openapiFields.add("budget");
    openapiFields.add("report_summary");
    openapiFields.add("audience_activity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 is not found in the empty JSON string", ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `channel`
      if (jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) {
        ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Channel.validateJsonObject(jsonObj.getAsJsonObject("channel"));
      }
      // validate the optional field `audience`
      if (jsonObj.get("audience") != null && !jsonObj.get("audience").isJsonNull()) {
        FacebookAdsListAdsResponseFacebookAdsInnerAllOf2Audience.validateJsonObject(jsonObj.getAsJsonObject("audience"));
      }
      // validate the optional field `budget`
      if (jsonObj.get("budget") != null && !jsonObj.get("budget").isJsonNull()) {
        ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1Budget.validateJsonObject(jsonObj.getAsJsonObject("budget"));
      }
      // validate the optional field `report_summary`
      if (jsonObj.get("report_summary") != null && !jsonObj.get("report_summary").isJsonNull()) {
        ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1ReportSummary.validateJsonObject(jsonObj.getAsJsonObject("report_summary"));
      }
      // validate the optional field `audience_activity`
      if (jsonObj.get("audience_activity") != null && !jsonObj.get("audience_activity").isJsonNull()) {
        ReportingListFacebookAdsReportsResponseFacebookAdsInnerAllOf1AudienceActivity.validateJsonObject(jsonObj.getAsJsonObject("audience_activity"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.class));

       return (TypeAdapter<T>) new TypeAdapter<ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1>() {
           @Override
           public void write(JsonWriter out, ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1
  * @throws IOException if the JSON string is invalid with respect to ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1
  */
  public static ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1.class);
  }

 /**
  * Convert an instance of ReportingListFacebookAdsReports200ResponseFacebookAdsInnerAllOf1 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

