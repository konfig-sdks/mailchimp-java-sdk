/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner;
import com.konfigthis.client.model.FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsLocations;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs {
  /**
   * Gets or Sets gender
   */
  @JsonAdapter(GenderEnum.Adapter.class)
 public enum GenderEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    GenderEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GenderEnum fromValue(Integer value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GenderEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return GenderEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private GenderEnum gender;

  public static final String SERIALIZED_NAME_MIN_AGE = "min_age";
  @SerializedName(SERIALIZED_NAME_MIN_AGE)
  private Integer minAge;

  public static final String SERIALIZED_NAME_MAX_AGE = "max_age";
  @SerializedName(SERIALIZED_NAME_MAX_AGE)
  private Integer maxAge;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsLocations locations;

  public static final String SERIALIZED_NAME_INTERESTS = "interests";
  @SerializedName(SERIALIZED_NAME_INTERESTS)
  private List<FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner> interests = null;

  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs() {
  }

  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs gender(GenderEnum gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GenderEnum getGender() {
    return gender;
  }


  public void setGender(GenderEnum gender) {
    
    
    
    this.gender = gender;
  }


  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs minAge(Integer minAge) {
    
    
    
    
    this.minAge = minAge;
    return this;
  }

   /**
   * Get minAge
   * @return minAge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMinAge() {
    return minAge;
  }


  public void setMinAge(Integer minAge) {
    
    
    
    this.minAge = minAge;
  }


  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs maxAge(Integer maxAge) {
    
    
    
    
    this.maxAge = maxAge;
    return this;
  }

   /**
   * Get maxAge
   * @return maxAge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxAge() {
    return maxAge;
  }


  public void setMaxAge(Integer maxAge) {
    
    
    
    this.maxAge = maxAge;
  }


  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs locations(FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsLocations locations) {
    
    
    
    
    this.locations = locations;
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsLocations getLocations() {
    return locations;
  }


  public void setLocations(FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsLocations locations) {
    
    
    
    this.locations = locations;
  }


  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs interests(List<FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner> interests) {
    
    
    
    
    this.interests = interests;
    return this;
  }

  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs addInterestsItem(FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner interestsItem) {
    if (this.interests == null) {
      this.interests = new ArrayList<>();
    }
    this.interests.add(interestsItem);
    return this;
  }

   /**
   * Get interests
   * @return interests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner> getInterests() {
    return interests;
  }


  public void setInterests(List<FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner> interests) {
    
    
    
    this.interests = interests;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs instance itself
   */
  public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs facebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs = (FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs) o;
    return Objects.equals(this.gender, facebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.gender) &&
        Objects.equals(this.minAge, facebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.minAge) &&
        Objects.equals(this.maxAge, facebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.maxAge) &&
        Objects.equals(this.locations, facebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.locations) &&
        Objects.equals(this.interests, facebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.interests)&&
        Objects.equals(this.additionalProperties, facebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gender, minAge, maxAge, locations, interests, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs {\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    minAge: ").append(toIndentedString(minAge)).append("\n");
    sb.append("    maxAge: ").append(toIndentedString(maxAge)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    interests: ").append(toIndentedString(interests)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("gender");
    openapiFields.add("min_age");
    openapiFields.add("max_age");
    openapiFields.add("locations");
    openapiFields.add("interests");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs is not found in the empty JSON string", FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `locations`
      if (jsonObj.get("locations") != null && !jsonObj.get("locations").isJsonNull()) {
        FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsLocations.validateJsonObject(jsonObj.getAsJsonObject("locations"));
      }
      if (jsonObj.get("interests") != null && !jsonObj.get("interests").isJsonNull()) {
        JsonArray jsonArrayinterests = jsonObj.getAsJsonArray("interests");
        if (jsonArrayinterests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("interests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `interests` to be an array in the JSON string but got `%s`", jsonObj.get("interests").toString()));
          }

          // validate the optional field `interests` (array)
          for (int i = 0; i < jsonArrayinterests.size(); i++) {
            FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecsInterestsInner.validateJsonObject(jsonArrayinterests.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.class));

       return (TypeAdapter<T>) new TypeAdapter<FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs>() {
           @Override
           public void write(JsonWriter out, FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs
  * @throws IOException if the JSON string is invalid with respect to FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs
  */
  public static FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs.class);
  }

 /**
  * Convert an instance of FacebookAdsListAdsResponseFacebookAdsInnerAllOf2AudienceTargetingSpecs to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

