/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BillingAddressProperty7;
import com.konfigthis.client.model.ECommerceCustomerProperty17;
import com.konfigthis.client.model.ECommerceOrderLineItem2;
import com.konfigthis.client.model.OutreachProperty7;
import com.konfigthis.client.model.PromosPropertyInner1;
import com.konfigthis.client.model.ResourceLink;
import com.konfigthis.client.model.ShippingAddressProperty7;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Information about a specific order.
 */
@ApiModel(description = "Information about a specific order.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EcommerceAddOrderToStore200Response {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private ECommerceCustomerProperty17 customer;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private String storeId;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaign_id";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private String campaignId;

  public static final String SERIALIZED_NAME_LANDING_SITE = "landing_site";
  @SerializedName(SERIALIZED_NAME_LANDING_SITE)
  private String landingSite;

  public static final String SERIALIZED_NAME_FINANCIAL_STATUS = "financial_status";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_STATUS)
  private String financialStatus;

  public static final String SERIALIZED_NAME_FULFILLMENT_STATUS = "fulfillment_status";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_STATUS)
  private String fulfillmentStatus;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currency_code";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_ORDER_TOTAL = "order_total";
  @SerializedName(SERIALIZED_NAME_ORDER_TOTAL)
  private Double orderTotal;

  public static final String SERIALIZED_NAME_ORDER_URL = "order_url";
  @SerializedName(SERIALIZED_NAME_ORDER_URL)
  private String orderUrl;

  public static final String SERIALIZED_NAME_DISCOUNT_TOTAL = "discount_total";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TOTAL)
  private Double discountTotal;

  public static final String SERIALIZED_NAME_TAX_TOTAL = "tax_total";
  @SerializedName(SERIALIZED_NAME_TAX_TOTAL)
  private Double taxTotal;

  public static final String SERIALIZED_NAME_SHIPPING_TOTAL = "shipping_total";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TOTAL)
  private Double shippingTotal;

  /**
   * The Mailchimp tracking code for the order. Uses the &#39;mc_tc&#39; parameter in E-Commerce tracking URLs.
   */
  @JsonAdapter(TrackingCodeEnum.Adapter.class)
 public enum TrackingCodeEnum {
    PREC("prec");

    private String value;

    TrackingCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TrackingCodeEnum fromValue(String value) {
      for (TrackingCodeEnum b : TrackingCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TrackingCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TrackingCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TrackingCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TrackingCodeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TRACKING_CODE = "tracking_code";
  @SerializedName(SERIALIZED_NAME_TRACKING_CODE)
  private TrackingCodeEnum trackingCode;

  public static final String SERIALIZED_NAME_PROCESSED_AT_FOREIGN = "processed_at_foreign";
  @SerializedName(SERIALIZED_NAME_PROCESSED_AT_FOREIGN)
  private OffsetDateTime processedAtForeign;

  public static final String SERIALIZED_NAME_CANCELLED_AT_FOREIGN = "cancelled_at_foreign";
  @SerializedName(SERIALIZED_NAME_CANCELLED_AT_FOREIGN)
  private OffsetDateTime cancelledAtForeign;

  public static final String SERIALIZED_NAME_UPDATED_AT_FOREIGN = "updated_at_foreign";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT_FOREIGN)
  private OffsetDateTime updatedAtForeign;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "shipping_address";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private ShippingAddressProperty7 shippingAddress;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS = "billing_address";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS)
  private BillingAddressProperty7 billingAddress;

  public static final String SERIALIZED_NAME_PROMOS = "promos";
  @SerializedName(SERIALIZED_NAME_PROMOS)
  private List<PromosPropertyInner1> promos = null;

  public static final String SERIALIZED_NAME_LINES = "lines";
  @SerializedName(SERIALIZED_NAME_LINES)
  private List<ECommerceOrderLineItem2> lines = null;

  public static final String SERIALIZED_NAME_OUTREACH = "outreach";
  @SerializedName(SERIALIZED_NAME_OUTREACH)
  private OutreachProperty7 outreach;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER = "tracking_number";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
  private String trackingNumber;

  public static final String SERIALIZED_NAME_TRACKING_CARRIER = "tracking_carrier";
  @SerializedName(SERIALIZED_NAME_TRACKING_CARRIER)
  private String trackingCarrier;

  public static final String SERIALIZED_NAME_TRACKING_URL = "tracking_url";
  @SerializedName(SERIALIZED_NAME_TRACKING_URL)
  private String trackingUrl;

  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<ResourceLink> links = null;

  public EcommerceAddOrderToStore200Response() {
  }

  
  public EcommerceAddOrderToStore200Response(
     String id, 
     String storeId, 
     List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.storeId = storeId;
    this.links = links;
  }

   /**
   * A unique identifier for the order.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique identifier for the order.")

  public String getId() {
    return id;
  }




  public EcommerceAddOrderToStore200Response customer(ECommerceCustomerProperty17 customer) {
    
    
    
    
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ECommerceCustomerProperty17 getCustomer() {
    return customer;
  }


  public void setCustomer(ECommerceCustomerProperty17 customer) {
    
    
    
    this.customer = customer;
  }


   /**
   * The unique identifier for the store.
   * @return storeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier for the store.")

  public String getStoreId() {
    return storeId;
  }




  public EcommerceAddOrderToStore200Response campaignId(String campaignId) {
    
    
    
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * A string that uniquely identifies the campaign associated with an order.
   * @return campaignId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "839488a60b", value = "A string that uniquely identifies the campaign associated with an order.")

  public String getCampaignId() {
    return campaignId;
  }


  public void setCampaignId(String campaignId) {
    
    
    
    this.campaignId = campaignId;
  }


  public EcommerceAddOrderToStore200Response landingSite(String landingSite) {
    
    
    
    
    this.landingSite = landingSite;
    return this;
  }

   /**
   * The URL for the page where the buyer landed when entering the shop.
   * @return landingSite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "http://www.example.com?source=abc", value = "The URL for the page where the buyer landed when entering the shop.")

  public String getLandingSite() {
    return landingSite;
  }


  public void setLandingSite(String landingSite) {
    
    
    
    this.landingSite = landingSite;
  }


  public EcommerceAddOrderToStore200Response financialStatus(String financialStatus) {
    
    
    
    
    this.financialStatus = financialStatus;
    return this;
  }

   /**
   * The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
   * @return financialStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).")

  public String getFinancialStatus() {
    return financialStatus;
  }


  public void setFinancialStatus(String financialStatus) {
    
    
    
    this.financialStatus = financialStatus;
  }


  public EcommerceAddOrderToStore200Response fulfillmentStatus(String fulfillmentStatus) {
    
    
    
    
    this.fulfillmentStatus = fulfillmentStatus;
    return this;
  }

   /**
   * The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
   * @return fulfillmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).")

  public String getFulfillmentStatus() {
    return fulfillmentStatus;
  }


  public void setFulfillmentStatus(String fulfillmentStatus) {
    
    
    
    this.fulfillmentStatus = fulfillmentStatus;
  }


  public EcommerceAddOrderToStore200Response currencyCode(String currencyCode) {
    
    
    
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The three-letter ISO 4217 code for the currency that the store accepts.
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The three-letter ISO 4217 code for the currency that the store accepts.")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    
    
    
    this.currencyCode = currencyCode;
  }


  public EcommerceAddOrderToStore200Response orderTotal(Double orderTotal) {
    
    
    
    
    this.orderTotal = orderTotal;
    return this;
  }

  public EcommerceAddOrderToStore200Response orderTotal(Integer orderTotal) {
    
    
    
    
    this.orderTotal = orderTotal.doubleValue();
    return this;
  }

   /**
   * The order total associated with an order.
   * @return orderTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order total associated with an order.")

  public Double getOrderTotal() {
    return orderTotal;
  }


  public void setOrderTotal(Double orderTotal) {
    
    
    
    this.orderTotal = orderTotal;
  }


  public EcommerceAddOrderToStore200Response orderUrl(String orderUrl) {
    
    
    
    
    this.orderUrl = orderUrl;
    return this;
  }

   /**
   * The URL for the order.
   * @return orderUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL for the order.")

  public String getOrderUrl() {
    return orderUrl;
  }


  public void setOrderUrl(String orderUrl) {
    
    
    
    this.orderUrl = orderUrl;
  }


  public EcommerceAddOrderToStore200Response discountTotal(Double discountTotal) {
    
    
    
    
    this.discountTotal = discountTotal;
    return this;
  }

  public EcommerceAddOrderToStore200Response discountTotal(Integer discountTotal) {
    
    
    
    
    this.discountTotal = discountTotal.doubleValue();
    return this;
  }

   /**
   * The total amount of the discounts to be applied to the price of the order.
   * @return discountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total amount of the discounts to be applied to the price of the order.")

  public Double getDiscountTotal() {
    return discountTotal;
  }


  public void setDiscountTotal(Double discountTotal) {
    
    
    
    this.discountTotal = discountTotal;
  }


  public EcommerceAddOrderToStore200Response taxTotal(Double taxTotal) {
    
    
    
    
    this.taxTotal = taxTotal;
    return this;
  }

  public EcommerceAddOrderToStore200Response taxTotal(Integer taxTotal) {
    
    
    
    
    this.taxTotal = taxTotal.doubleValue();
    return this;
  }

   /**
   * The tax total associated with an order.
   * @return taxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tax total associated with an order.")

  public Double getTaxTotal() {
    return taxTotal;
  }


  public void setTaxTotal(Double taxTotal) {
    
    
    
    this.taxTotal = taxTotal;
  }


  public EcommerceAddOrderToStore200Response shippingTotal(Double shippingTotal) {
    
    
    
    
    this.shippingTotal = shippingTotal;
    return this;
  }

  public EcommerceAddOrderToStore200Response shippingTotal(Integer shippingTotal) {
    
    
    
    
    this.shippingTotal = shippingTotal.doubleValue();
    return this;
  }

   /**
   * The shipping total for the order.
   * @return shippingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The shipping total for the order.")

  public Double getShippingTotal() {
    return shippingTotal;
  }


  public void setShippingTotal(Double shippingTotal) {
    
    
    
    this.shippingTotal = shippingTotal;
  }


  public EcommerceAddOrderToStore200Response trackingCode(TrackingCodeEnum trackingCode) {
    
    
    
    
    this.trackingCode = trackingCode;
    return this;
  }

   /**
   * The Mailchimp tracking code for the order. Uses the &#39;mc_tc&#39; parameter in E-Commerce tracking URLs.
   * @return trackingCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs.")

  public TrackingCodeEnum getTrackingCode() {
    return trackingCode;
  }


  public void setTrackingCode(TrackingCodeEnum trackingCode) {
    
    
    
    this.trackingCode = trackingCode;
  }


  public EcommerceAddOrderToStore200Response processedAtForeign(OffsetDateTime processedAtForeign) {
    
    
    
    
    this.processedAtForeign = processedAtForeign;
    return this;
  }

   /**
   * The date and time the order was processed in ISO 8601 format.
   * @return processedAtForeign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-07-15T19:28Z", value = "The date and time the order was processed in ISO 8601 format.")

  public OffsetDateTime getProcessedAtForeign() {
    return processedAtForeign;
  }


  public void setProcessedAtForeign(OffsetDateTime processedAtForeign) {
    
    
    
    this.processedAtForeign = processedAtForeign;
  }


  public EcommerceAddOrderToStore200Response cancelledAtForeign(OffsetDateTime cancelledAtForeign) {
    
    
    
    
    this.cancelledAtForeign = cancelledAtForeign;
    return this;
  }

   /**
   * The date and time the order was cancelled in ISO 8601 format.
   * @return cancelledAtForeign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-07-15T19:28Z", value = "The date and time the order was cancelled in ISO 8601 format.")

  public OffsetDateTime getCancelledAtForeign() {
    return cancelledAtForeign;
  }


  public void setCancelledAtForeign(OffsetDateTime cancelledAtForeign) {
    
    
    
    this.cancelledAtForeign = cancelledAtForeign;
  }


  public EcommerceAddOrderToStore200Response updatedAtForeign(OffsetDateTime updatedAtForeign) {
    
    
    
    
    this.updatedAtForeign = updatedAtForeign;
    return this;
  }

   /**
   * The date and time the order was updated in ISO 8601 format.
   * @return updatedAtForeign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-07-15T19:28Z", value = "The date and time the order was updated in ISO 8601 format.")

  public OffsetDateTime getUpdatedAtForeign() {
    return updatedAtForeign;
  }


  public void setUpdatedAtForeign(OffsetDateTime updatedAtForeign) {
    
    
    
    this.updatedAtForeign = updatedAtForeign;
  }


  public EcommerceAddOrderToStore200Response shippingAddress(ShippingAddressProperty7 shippingAddress) {
    
    
    
    
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShippingAddressProperty7 getShippingAddress() {
    return shippingAddress;
  }


  public void setShippingAddress(ShippingAddressProperty7 shippingAddress) {
    
    
    
    this.shippingAddress = shippingAddress;
  }


  public EcommerceAddOrderToStore200Response billingAddress(BillingAddressProperty7 billingAddress) {
    
    
    
    
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BillingAddressProperty7 getBillingAddress() {
    return billingAddress;
  }


  public void setBillingAddress(BillingAddressProperty7 billingAddress) {
    
    
    
    this.billingAddress = billingAddress;
  }


  public EcommerceAddOrderToStore200Response promos(List<PromosPropertyInner1> promos) {
    
    
    
    
    this.promos = promos;
    return this;
  }

  public EcommerceAddOrderToStore200Response addPromosItem(PromosPropertyInner1 promosItem) {
    if (this.promos == null) {
      this.promos = new ArrayList<>();
    }
    this.promos.add(promosItem);
    return this;
  }

   /**
   * The promo codes applied on the order
   * @return promos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The promo codes applied on the order")

  public List<PromosPropertyInner1> getPromos() {
    return promos;
  }


  public void setPromos(List<PromosPropertyInner1> promos) {
    
    
    
    this.promos = promos;
  }


  public EcommerceAddOrderToStore200Response lines(List<ECommerceOrderLineItem2> lines) {
    
    
    
    
    this.lines = lines;
    return this;
  }

  public EcommerceAddOrderToStore200Response addLinesItem(ECommerceOrderLineItem2 linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * An array of the order&#39;s line items.
   * @return lines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of the order's line items.")

  public List<ECommerceOrderLineItem2> getLines() {
    return lines;
  }


  public void setLines(List<ECommerceOrderLineItem2> lines) {
    
    
    
    this.lines = lines;
  }


  public EcommerceAddOrderToStore200Response outreach(OutreachProperty7 outreach) {
    
    
    
    
    this.outreach = outreach;
    return this;
  }

   /**
   * Get outreach
   * @return outreach
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OutreachProperty7 getOutreach() {
    return outreach;
  }


  public void setOutreach(OutreachProperty7 outreach) {
    
    
    
    this.outreach = outreach;
  }


  public EcommerceAddOrderToStore200Response trackingNumber(String trackingNumber) {
    
    
    
    
    this.trackingNumber = trackingNumber;
    return this;
  }

   /**
   * The tracking number associated with the order.
   * @return trackingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tracking number associated with the order.")

  public String getTrackingNumber() {
    return trackingNumber;
  }


  public void setTrackingNumber(String trackingNumber) {
    
    
    
    this.trackingNumber = trackingNumber;
  }


  public EcommerceAddOrderToStore200Response trackingCarrier(String trackingCarrier) {
    
    
    
    
    this.trackingCarrier = trackingCarrier;
    return this;
  }

   /**
   * The tracking carrier associated with the order.
   * @return trackingCarrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tracking carrier associated with the order.")

  public String getTrackingCarrier() {
    return trackingCarrier;
  }


  public void setTrackingCarrier(String trackingCarrier) {
    
    
    
    this.trackingCarrier = trackingCarrier;
  }


  public EcommerceAddOrderToStore200Response trackingUrl(String trackingUrl) {
    
    
    
    
    this.trackingUrl = trackingUrl;
    return this;
  }

   /**
   * The tracking URL associated with the order.
   * @return trackingUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tracking URL associated with the order.")

  public String getTrackingUrl() {
    return trackingUrl;
  }


  public void setTrackingUrl(String trackingUrl) {
    
    
    
    this.trackingUrl = trackingUrl;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of link types and descriptions for the API schema documents.")

  public List<ResourceLink> getLinks() {
    return links;
  }



  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EcommerceAddOrderToStore200Response instance itself
   */
  public EcommerceAddOrderToStore200Response putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EcommerceAddOrderToStore200Response ecommerceAddOrderToStore200Response = (EcommerceAddOrderToStore200Response) o;
    return Objects.equals(this.id, ecommerceAddOrderToStore200Response.id) &&
        Objects.equals(this.customer, ecommerceAddOrderToStore200Response.customer) &&
        Objects.equals(this.storeId, ecommerceAddOrderToStore200Response.storeId) &&
        Objects.equals(this.campaignId, ecommerceAddOrderToStore200Response.campaignId) &&
        Objects.equals(this.landingSite, ecommerceAddOrderToStore200Response.landingSite) &&
        Objects.equals(this.financialStatus, ecommerceAddOrderToStore200Response.financialStatus) &&
        Objects.equals(this.fulfillmentStatus, ecommerceAddOrderToStore200Response.fulfillmentStatus) &&
        Objects.equals(this.currencyCode, ecommerceAddOrderToStore200Response.currencyCode) &&
        Objects.equals(this.orderTotal, ecommerceAddOrderToStore200Response.orderTotal) &&
        Objects.equals(this.orderUrl, ecommerceAddOrderToStore200Response.orderUrl) &&
        Objects.equals(this.discountTotal, ecommerceAddOrderToStore200Response.discountTotal) &&
        Objects.equals(this.taxTotal, ecommerceAddOrderToStore200Response.taxTotal) &&
        Objects.equals(this.shippingTotal, ecommerceAddOrderToStore200Response.shippingTotal) &&
        Objects.equals(this.trackingCode, ecommerceAddOrderToStore200Response.trackingCode) &&
        Objects.equals(this.processedAtForeign, ecommerceAddOrderToStore200Response.processedAtForeign) &&
        Objects.equals(this.cancelledAtForeign, ecommerceAddOrderToStore200Response.cancelledAtForeign) &&
        Objects.equals(this.updatedAtForeign, ecommerceAddOrderToStore200Response.updatedAtForeign) &&
        Objects.equals(this.shippingAddress, ecommerceAddOrderToStore200Response.shippingAddress) &&
        Objects.equals(this.billingAddress, ecommerceAddOrderToStore200Response.billingAddress) &&
        Objects.equals(this.promos, ecommerceAddOrderToStore200Response.promos) &&
        Objects.equals(this.lines, ecommerceAddOrderToStore200Response.lines) &&
        Objects.equals(this.outreach, ecommerceAddOrderToStore200Response.outreach) &&
        Objects.equals(this.trackingNumber, ecommerceAddOrderToStore200Response.trackingNumber) &&
        Objects.equals(this.trackingCarrier, ecommerceAddOrderToStore200Response.trackingCarrier) &&
        Objects.equals(this.trackingUrl, ecommerceAddOrderToStore200Response.trackingUrl) &&
        Objects.equals(this.links, ecommerceAddOrderToStore200Response.links)&&
        Objects.equals(this.additionalProperties, ecommerceAddOrderToStore200Response.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, customer, storeId, campaignId, landingSite, financialStatus, fulfillmentStatus, currencyCode, orderTotal, orderUrl, discountTotal, taxTotal, shippingTotal, trackingCode, processedAtForeign, cancelledAtForeign, updatedAtForeign, shippingAddress, billingAddress, promos, lines, outreach, trackingNumber, trackingCarrier, trackingUrl, links, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EcommerceAddOrderToStore200Response {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    landingSite: ").append(toIndentedString(landingSite)).append("\n");
    sb.append("    financialStatus: ").append(toIndentedString(financialStatus)).append("\n");
    sb.append("    fulfillmentStatus: ").append(toIndentedString(fulfillmentStatus)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    orderTotal: ").append(toIndentedString(orderTotal)).append("\n");
    sb.append("    orderUrl: ").append(toIndentedString(orderUrl)).append("\n");
    sb.append("    discountTotal: ").append(toIndentedString(discountTotal)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    shippingTotal: ").append(toIndentedString(shippingTotal)).append("\n");
    sb.append("    trackingCode: ").append(toIndentedString(trackingCode)).append("\n");
    sb.append("    processedAtForeign: ").append(toIndentedString(processedAtForeign)).append("\n");
    sb.append("    cancelledAtForeign: ").append(toIndentedString(cancelledAtForeign)).append("\n");
    sb.append("    updatedAtForeign: ").append(toIndentedString(updatedAtForeign)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    promos: ").append(toIndentedString(promos)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    outreach: ").append(toIndentedString(outreach)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    trackingCarrier: ").append(toIndentedString(trackingCarrier)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("customer");
    openapiFields.add("store_id");
    openapiFields.add("campaign_id");
    openapiFields.add("landing_site");
    openapiFields.add("financial_status");
    openapiFields.add("fulfillment_status");
    openapiFields.add("currency_code");
    openapiFields.add("order_total");
    openapiFields.add("order_url");
    openapiFields.add("discount_total");
    openapiFields.add("tax_total");
    openapiFields.add("shipping_total");
    openapiFields.add("tracking_code");
    openapiFields.add("processed_at_foreign");
    openapiFields.add("cancelled_at_foreign");
    openapiFields.add("updated_at_foreign");
    openapiFields.add("shipping_address");
    openapiFields.add("billing_address");
    openapiFields.add("promos");
    openapiFields.add("lines");
    openapiFields.add("outreach");
    openapiFields.add("tracking_number");
    openapiFields.add("tracking_carrier");
    openapiFields.add("tracking_url");
    openapiFields.add("_links");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EcommerceAddOrderToStore200Response
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EcommerceAddOrderToStore200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EcommerceAddOrderToStore200Response is not found in the empty JSON string", EcommerceAddOrderToStore200Response.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `customer`
      if (jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) {
        ECommerceCustomerProperty17.validateJsonObject(jsonObj.getAsJsonObject("customer"));
      }
      if ((jsonObj.get("store_id") != null && !jsonObj.get("store_id").isJsonNull()) && !jsonObj.get("store_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_id").toString()));
      }
      if ((jsonObj.get("campaign_id") != null && !jsonObj.get("campaign_id").isJsonNull()) && !jsonObj.get("campaign_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("campaign_id").toString()));
      }
      if ((jsonObj.get("landing_site") != null && !jsonObj.get("landing_site").isJsonNull()) && !jsonObj.get("landing_site").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `landing_site` to be a primitive type in the JSON string but got `%s`", jsonObj.get("landing_site").toString()));
      }
      if ((jsonObj.get("financial_status") != null && !jsonObj.get("financial_status").isJsonNull()) && !jsonObj.get("financial_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `financial_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("financial_status").toString()));
      }
      if ((jsonObj.get("fulfillment_status") != null && !jsonObj.get("fulfillment_status").isJsonNull()) && !jsonObj.get("fulfillment_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillment_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillment_status").toString()));
      }
      if ((jsonObj.get("currency_code") != null && !jsonObj.get("currency_code").isJsonNull()) && !jsonObj.get("currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency_code").toString()));
      }
      if ((jsonObj.get("order_url") != null && !jsonObj.get("order_url").isJsonNull()) && !jsonObj.get("order_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_url").toString()));
      }
      if ((jsonObj.get("tracking_code") != null && !jsonObj.get("tracking_code").isJsonNull()) && !jsonObj.get("tracking_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_code").toString()));
      }
      // validate the optional field `shipping_address`
      if (jsonObj.get("shipping_address") != null && !jsonObj.get("shipping_address").isJsonNull()) {
        ShippingAddressProperty7.validateJsonObject(jsonObj.getAsJsonObject("shipping_address"));
      }
      // validate the optional field `billing_address`
      if (jsonObj.get("billing_address") != null && !jsonObj.get("billing_address").isJsonNull()) {
        BillingAddressProperty7.validateJsonObject(jsonObj.getAsJsonObject("billing_address"));
      }
      if (jsonObj.get("promos") != null && !jsonObj.get("promos").isJsonNull()) {
        JsonArray jsonArraypromos = jsonObj.getAsJsonArray("promos");
        if (jsonArraypromos != null) {
          // ensure the json data is an array
          if (!jsonObj.get("promos").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `promos` to be an array in the JSON string but got `%s`", jsonObj.get("promos").toString()));
          }

          // validate the optional field `promos` (array)
          for (int i = 0; i < jsonArraypromos.size(); i++) {
            PromosPropertyInner1.validateJsonObject(jsonArraypromos.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("lines") != null && !jsonObj.get("lines").isJsonNull()) {
        JsonArray jsonArraylines = jsonObj.getAsJsonArray("lines");
        if (jsonArraylines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lines` to be an array in the JSON string but got `%s`", jsonObj.get("lines").toString()));
          }

          // validate the optional field `lines` (array)
          for (int i = 0; i < jsonArraylines.size(); i++) {
            ECommerceOrderLineItem2.validateJsonObject(jsonArraylines.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `outreach`
      if (jsonObj.get("outreach") != null && !jsonObj.get("outreach").isJsonNull()) {
        OutreachProperty7.validateJsonObject(jsonObj.getAsJsonObject("outreach"));
      }
      if ((jsonObj.get("tracking_number") != null && !jsonObj.get("tracking_number").isJsonNull()) && !jsonObj.get("tracking_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_number").toString()));
      }
      if ((jsonObj.get("tracking_carrier") != null && !jsonObj.get("tracking_carrier").isJsonNull()) && !jsonObj.get("tracking_carrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_carrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_carrier").toString()));
      }
      if ((jsonObj.get("tracking_url") != null && !jsonObj.get("tracking_url").isJsonNull()) && !jsonObj.get("tracking_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_url").toString()));
      }
      if (jsonObj.get("_links") != null && !jsonObj.get("_links").isJsonNull()) {
        JsonArray jsonArraylinks = jsonObj.getAsJsonArray("_links");
        if (jsonArraylinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("_links").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `_links` to be an array in the JSON string but got `%s`", jsonObj.get("_links").toString()));
          }

          // validate the optional field `_links` (array)
          for (int i = 0; i < jsonArraylinks.size(); i++) {
            ResourceLink.validateJsonObject(jsonArraylinks.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EcommerceAddOrderToStore200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EcommerceAddOrderToStore200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EcommerceAddOrderToStore200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EcommerceAddOrderToStore200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<EcommerceAddOrderToStore200Response>() {
           @Override
           public void write(JsonWriter out, EcommerceAddOrderToStore200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EcommerceAddOrderToStore200Response read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EcommerceAddOrderToStore200Response instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EcommerceAddOrderToStore200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EcommerceAddOrderToStore200Response
  * @throws IOException if the JSON string is invalid with respect to EcommerceAddOrderToStore200Response
  */
  public static EcommerceAddOrderToStore200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EcommerceAddOrderToStore200Response.class);
  }

 /**
  * Convert an instance of EcommerceAddOrderToStore200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

