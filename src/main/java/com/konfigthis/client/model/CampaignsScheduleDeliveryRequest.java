/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BatchDeliveryProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CampaignsScheduleDeliveryRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CampaignsScheduleDeliveryRequest {
  public static final String SERIALIZED_NAME_SCHEDULE_TIME = "schedule_time";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TIME)
  private OffsetDateTime scheduleTime;

  public static final String SERIALIZED_NAME_TIMEWARP = "timewarp";
  @SerializedName(SERIALIZED_NAME_TIMEWARP)
  private Boolean timewarp;

  public static final String SERIALIZED_NAME_BATCH_DELIVERY = "batch_delivery";
  @SerializedName(SERIALIZED_NAME_BATCH_DELIVERY)
  private BatchDeliveryProperty batchDelivery;

  public CampaignsScheduleDeliveryRequest() {
  }

  public CampaignsScheduleDeliveryRequest scheduleTime(OffsetDateTime scheduleTime) {
    
    
    
    
    this.scheduleTime = scheduleTime;
    return this;
  }

   /**
   * The UTC date and time to schedule the campaign for delivery in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour (:00, :15, :30, :45).
   * @return scheduleTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The UTC date and time to schedule the campaign for delivery in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour (:00, :15, :30, :45).")

  public OffsetDateTime getScheduleTime() {
    return scheduleTime;
  }


  public void setScheduleTime(OffsetDateTime scheduleTime) {
    
    
    
    this.scheduleTime = scheduleTime;
  }


  public CampaignsScheduleDeliveryRequest timewarp(Boolean timewarp) {
    
    
    
    
    this.timewarp = timewarp;
    return this;
  }

   /**
   * Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/) when sending. Campaigns scheduled with Timewarp are localized based on the recipients&#39; time zones. For example, a Timewarp campaign with a &#x60;schedule_time&#x60; of 13:00 will be sent to each recipient at 1:00pm in their local time. Cannot be set to &#x60;true&#x60; for campaigns using [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/).
   * @return timewarp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/) when sending. Campaigns scheduled with Timewarp are localized based on the recipients' time zones. For example, a Timewarp campaign with a `schedule_time` of 13:00 will be sent to each recipient at 1:00pm in their local time. Cannot be set to `true` for campaigns using [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/).")

  public Boolean getTimewarp() {
    return timewarp;
  }


  public void setTimewarp(Boolean timewarp) {
    
    
    
    this.timewarp = timewarp;
  }


  public CampaignsScheduleDeliveryRequest batchDelivery(BatchDeliveryProperty batchDelivery) {
    
    
    
    
    this.batchDelivery = batchDelivery;
    return this;
  }

   /**
   * Get batchDelivery
   * @return batchDelivery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BatchDeliveryProperty getBatchDelivery() {
    return batchDelivery;
  }


  public void setBatchDelivery(BatchDeliveryProperty batchDelivery) {
    
    
    
    this.batchDelivery = batchDelivery;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CampaignsScheduleDeliveryRequest instance itself
   */
  public CampaignsScheduleDeliveryRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignsScheduleDeliveryRequest campaignsScheduleDeliveryRequest = (CampaignsScheduleDeliveryRequest) o;
    return Objects.equals(this.scheduleTime, campaignsScheduleDeliveryRequest.scheduleTime) &&
        Objects.equals(this.timewarp, campaignsScheduleDeliveryRequest.timewarp) &&
        Objects.equals(this.batchDelivery, campaignsScheduleDeliveryRequest.batchDelivery)&&
        Objects.equals(this.additionalProperties, campaignsScheduleDeliveryRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduleTime, timewarp, batchDelivery, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignsScheduleDeliveryRequest {\n");
    sb.append("    scheduleTime: ").append(toIndentedString(scheduleTime)).append("\n");
    sb.append("    timewarp: ").append(toIndentedString(timewarp)).append("\n");
    sb.append("    batchDelivery: ").append(toIndentedString(batchDelivery)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("schedule_time");
    openapiFields.add("timewarp");
    openapiFields.add("batch_delivery");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("schedule_time");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CampaignsScheduleDeliveryRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CampaignsScheduleDeliveryRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CampaignsScheduleDeliveryRequest is not found in the empty JSON string", CampaignsScheduleDeliveryRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CampaignsScheduleDeliveryRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `batch_delivery`
      if (jsonObj.get("batch_delivery") != null && !jsonObj.get("batch_delivery").isJsonNull()) {
        BatchDeliveryProperty.validateJsonObject(jsonObj.getAsJsonObject("batch_delivery"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CampaignsScheduleDeliveryRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CampaignsScheduleDeliveryRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CampaignsScheduleDeliveryRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CampaignsScheduleDeliveryRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CampaignsScheduleDeliveryRequest>() {
           @Override
           public void write(JsonWriter out, CampaignsScheduleDeliveryRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CampaignsScheduleDeliveryRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CampaignsScheduleDeliveryRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CampaignsScheduleDeliveryRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CampaignsScheduleDeliveryRequest
  * @throws IOException if the JSON string is invalid with respect to CampaignsScheduleDeliveryRequest
  */
  public static CampaignsScheduleDeliveryRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CampaignsScheduleDeliveryRequest.class);
  }

 /**
  * Convert an instance of CampaignsScheduleDeliveryRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

