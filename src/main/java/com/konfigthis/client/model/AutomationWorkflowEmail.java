/*
 * Mailchimp Marketing API
 * Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience.
 *
 * The version of the OpenAPI document: 3.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AutomationDelayProperty1;
import com.konfigthis.client.model.AutomationTriggerProperty1;
import com.konfigthis.client.model.CampaignReportSummaryProperty1;
import com.konfigthis.client.model.CampaignSettingsProperty3;
import com.konfigthis.client.model.CampaignSocialCardProperty;
import com.konfigthis.client.model.CampaignTrackingOptionsProperty1;
import com.konfigthis.client.model.ListProperty9;
import com.konfigthis.client.model.ResourceLink;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * A summary of an individual Automation workflow email.
 */
@ApiModel(description = "A summary of an individual Automation workflow email.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AutomationWorkflowEmail {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_WEB_ID = "web_id";
  @SerializedName(SERIALIZED_NAME_WEB_ID)
  private Integer webId;

  public static final String SERIALIZED_NAME_WORKFLOW_ID = "workflow_id";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_ID)
  private String workflowId;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_DELAY = "delay";
  @SerializedName(SERIALIZED_NAME_DELAY)
  private AutomationDelayProperty1 delay;

  public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private OffsetDateTime createTime;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_ARCHIVE_URL = "archive_url";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_URL)
  private String archiveUrl;

  /**
   * The current status of the campaign.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
 public enum StatusEnum {
    SAVE("save"),
    
    PAUSED("paused"),
    
    SENDING("sending");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_EMAILS_SENT = "emails_sent";
  @SerializedName(SERIALIZED_NAME_EMAILS_SENT)
  private Integer emailsSent;

  public static final String SERIALIZED_NAME_SEND_TIME = "send_time";
  @SerializedName(SERIALIZED_NAME_SEND_TIME)
  private OffsetDateTime sendTime;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_NEEDS_BLOCK_REFRESH = "needs_block_refresh";
  @SerializedName(SERIALIZED_NAME_NEEDS_BLOCK_REFRESH)
  private Boolean needsBlockRefresh;

  public static final String SERIALIZED_NAME_HAS_LOGO_MERGE_TAG = "has_logo_merge_tag";
  @SerializedName(SERIALIZED_NAME_HAS_LOGO_MERGE_TAG)
  private Boolean hasLogoMergeTag;

  public static final String SERIALIZED_NAME_RECIPIENTS = "recipients";
  @SerializedName(SERIALIZED_NAME_RECIPIENTS)
  private ListProperty9 recipients;

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private CampaignSettingsProperty3 settings;

  public static final String SERIALIZED_NAME_TRACKING = "tracking";
  @SerializedName(SERIALIZED_NAME_TRACKING)
  private CampaignTrackingOptionsProperty1 tracking;

  public static final String SERIALIZED_NAME_SOCIAL_CARD = "social_card";
  @SerializedName(SERIALIZED_NAME_SOCIAL_CARD)
  private CampaignSocialCardProperty socialCard;

  public static final String SERIALIZED_NAME_TRIGGER_SETTINGS = "trigger_settings";
  @SerializedName(SERIALIZED_NAME_TRIGGER_SETTINGS)
  private AutomationTriggerProperty1 triggerSettings;

  public static final String SERIALIZED_NAME_REPORT_SUMMARY = "report_summary";
  @SerializedName(SERIALIZED_NAME_REPORT_SUMMARY)
  private CampaignReportSummaryProperty1 reportSummary;

  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<ResourceLink> links = null;

  public AutomationWorkflowEmail() {
  }

  
  public AutomationWorkflowEmail(
     String id, 
     Integer webId, 
     String workflowId, 
     Integer position, 
     OffsetDateTime createTime, 
     OffsetDateTime startTime, 
     String archiveUrl, 
     StatusEnum status, 
     Integer emailsSent, 
     OffsetDateTime sendTime, 
     String contentType, 
     Boolean needsBlockRefresh, 
     Boolean hasLogoMergeTag, 
     List<ResourceLink> links
  ) {
    this();
    this.id = id;
    this.webId = webId;
    this.workflowId = workflowId;
    this.position = position;
    this.createTime = createTime;
    this.startTime = startTime;
    this.archiveUrl = archiveUrl;
    this.status = status;
    this.emailsSent = emailsSent;
    this.sendTime = sendTime;
    this.contentType = contentType;
    this.needsBlockRefresh = needsBlockRefresh;
    this.hasLogoMergeTag = hasLogoMergeTag;
    this.links = links;
  }

   /**
   * A string that uniquely identifies the Automation email.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A string that uniquely identifies the Automation email.")

  public String getId() {
    return id;
  }




   /**
   * The ID used in the Mailchimp web application. View this automation in your Mailchimp account at &#x60;https://{dc}.admin.mailchimp.com/campaigns/show/?id&#x3D;{web_id}&#x60;.
   * @return webId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "33345484", value = "The ID used in the Mailchimp web application. View this automation in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.")

  public Integer getWebId() {
    return webId;
  }




   /**
   * A string that uniquely identifies an Automation workflow.
   * @return workflowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A string that uniquely identifies an Automation workflow.")

  public String getWorkflowId() {
    return workflowId;
  }




   /**
   * The position of an Automation email in a workflow.
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position of an Automation email in a workflow.")

  public Integer getPosition() {
    return position;
  }




  public AutomationWorkflowEmail delay(AutomationDelayProperty1 delay) {
    
    
    
    
    this.delay = delay;
    return this;
  }

   /**
   * Get delay
   * @return delay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AutomationDelayProperty1 getDelay() {
    return delay;
  }


  public void setDelay(AutomationDelayProperty1 delay) {
    
    
    
    this.delay = delay;
  }


   /**
   * The date and time the campaign was created in ISO 8601 format.
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the campaign was created in ISO 8601 format.")

  public OffsetDateTime getCreateTime() {
    return createTime;
  }




   /**
   * The date and time the campaign was started in ISO 8601 format.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the campaign was started in ISO 8601 format.")

  public OffsetDateTime getStartTime() {
    return startTime;
  }




   /**
   * The link to the campaign&#39;s archive version in ISO 8601 format.
   * @return archiveUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The link to the campaign's archive version in ISO 8601 format.")

  public String getArchiveUrl() {
    return archiveUrl;
  }




   /**
   * The current status of the campaign.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current status of the campaign.")

  public StatusEnum getStatus() {
    return status;
  }




   /**
   * The total number of emails sent for this campaign.
   * @return emailsSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of emails sent for this campaign.")

  public Integer getEmailsSent() {
    return emailsSent;
  }




   /**
   *  The date and time a campaign was sent in ISO 8601 format
   * @return sendTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " The date and time a campaign was sent in ISO 8601 format")

  public OffsetDateTime getSendTime() {
    return sendTime;
  }




   /**
   * How the campaign&#39;s content is put together (&#39;template&#39;, &#39;drag_and_drop&#39;, &#39;html&#39;, &#39;url&#39;).
   * @return contentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').")

  public String getContentType() {
    return contentType;
  }




   /**
   * Determines if the automation email needs its blocks refreshed by opening the web-based campaign editor.
   * @return needsBlockRefresh
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Determines if the automation email needs its blocks refreshed by opening the web-based campaign editor.")

  public Boolean getNeedsBlockRefresh() {
    return needsBlockRefresh;
  }




   /**
   * Determines if the campaign contains the *|BRAND:LOGO|* merge tag.
   * @return hasLogoMergeTag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Determines if the campaign contains the *|BRAND:LOGO|* merge tag.")

  public Boolean getHasLogoMergeTag() {
    return hasLogoMergeTag;
  }




  public AutomationWorkflowEmail recipients(ListProperty9 recipients) {
    
    
    
    
    this.recipients = recipients;
    return this;
  }

   /**
   * Get recipients
   * @return recipients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ListProperty9 getRecipients() {
    return recipients;
  }


  public void setRecipients(ListProperty9 recipients) {
    
    
    
    this.recipients = recipients;
  }


  public AutomationWorkflowEmail settings(CampaignSettingsProperty3 settings) {
    
    
    
    
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CampaignSettingsProperty3 getSettings() {
    return settings;
  }


  public void setSettings(CampaignSettingsProperty3 settings) {
    
    
    
    this.settings = settings;
  }


  public AutomationWorkflowEmail tracking(CampaignTrackingOptionsProperty1 tracking) {
    
    
    
    
    this.tracking = tracking;
    return this;
  }

   /**
   * Get tracking
   * @return tracking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CampaignTrackingOptionsProperty1 getTracking() {
    return tracking;
  }


  public void setTracking(CampaignTrackingOptionsProperty1 tracking) {
    
    
    
    this.tracking = tracking;
  }


  public AutomationWorkflowEmail socialCard(CampaignSocialCardProperty socialCard) {
    
    
    
    
    this.socialCard = socialCard;
    return this;
  }

   /**
   * Get socialCard
   * @return socialCard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CampaignSocialCardProperty getSocialCard() {
    return socialCard;
  }


  public void setSocialCard(CampaignSocialCardProperty socialCard) {
    
    
    
    this.socialCard = socialCard;
  }


  public AutomationWorkflowEmail triggerSettings(AutomationTriggerProperty1 triggerSettings) {
    
    
    
    
    this.triggerSettings = triggerSettings;
    return this;
  }

   /**
   * Get triggerSettings
   * @return triggerSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AutomationTriggerProperty1 getTriggerSettings() {
    return triggerSettings;
  }


  public void setTriggerSettings(AutomationTriggerProperty1 triggerSettings) {
    
    
    
    this.triggerSettings = triggerSettings;
  }


  public AutomationWorkflowEmail reportSummary(CampaignReportSummaryProperty1 reportSummary) {
    
    
    
    
    this.reportSummary = reportSummary;
    return this;
  }

   /**
   * Get reportSummary
   * @return reportSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CampaignReportSummaryProperty1 getReportSummary() {
    return reportSummary;
  }


  public void setReportSummary(CampaignReportSummaryProperty1 reportSummary) {
    
    
    
    this.reportSummary = reportSummary;
  }


   /**
   * A list of link types and descriptions for the API schema documents.
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of link types and descriptions for the API schema documents.")

  public List<ResourceLink> getLinks() {
    return links;
  }



  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AutomationWorkflowEmail instance itself
   */
  public AutomationWorkflowEmail putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationWorkflowEmail automationWorkflowEmail = (AutomationWorkflowEmail) o;
    return Objects.equals(this.id, automationWorkflowEmail.id) &&
        Objects.equals(this.webId, automationWorkflowEmail.webId) &&
        Objects.equals(this.workflowId, automationWorkflowEmail.workflowId) &&
        Objects.equals(this.position, automationWorkflowEmail.position) &&
        Objects.equals(this.delay, automationWorkflowEmail.delay) &&
        Objects.equals(this.createTime, automationWorkflowEmail.createTime) &&
        Objects.equals(this.startTime, automationWorkflowEmail.startTime) &&
        Objects.equals(this.archiveUrl, automationWorkflowEmail.archiveUrl) &&
        Objects.equals(this.status, automationWorkflowEmail.status) &&
        Objects.equals(this.emailsSent, automationWorkflowEmail.emailsSent) &&
        Objects.equals(this.sendTime, automationWorkflowEmail.sendTime) &&
        Objects.equals(this.contentType, automationWorkflowEmail.contentType) &&
        Objects.equals(this.needsBlockRefresh, automationWorkflowEmail.needsBlockRefresh) &&
        Objects.equals(this.hasLogoMergeTag, automationWorkflowEmail.hasLogoMergeTag) &&
        Objects.equals(this.recipients, automationWorkflowEmail.recipients) &&
        Objects.equals(this.settings, automationWorkflowEmail.settings) &&
        Objects.equals(this.tracking, automationWorkflowEmail.tracking) &&
        Objects.equals(this.socialCard, automationWorkflowEmail.socialCard) &&
        Objects.equals(this.triggerSettings, automationWorkflowEmail.triggerSettings) &&
        Objects.equals(this.reportSummary, automationWorkflowEmail.reportSummary) &&
        Objects.equals(this.links, automationWorkflowEmail.links)&&
        Objects.equals(this.additionalProperties, automationWorkflowEmail.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, webId, workflowId, position, delay, createTime, startTime, archiveUrl, status, emailsSent, sendTime, contentType, needsBlockRefresh, hasLogoMergeTag, recipients, settings, tracking, socialCard, triggerSettings, reportSummary, links, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationWorkflowEmail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    webId: ").append(toIndentedString(webId)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    delay: ").append(toIndentedString(delay)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    archiveUrl: ").append(toIndentedString(archiveUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    emailsSent: ").append(toIndentedString(emailsSent)).append("\n");
    sb.append("    sendTime: ").append(toIndentedString(sendTime)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    needsBlockRefresh: ").append(toIndentedString(needsBlockRefresh)).append("\n");
    sb.append("    hasLogoMergeTag: ").append(toIndentedString(hasLogoMergeTag)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    tracking: ").append(toIndentedString(tracking)).append("\n");
    sb.append("    socialCard: ").append(toIndentedString(socialCard)).append("\n");
    sb.append("    triggerSettings: ").append(toIndentedString(triggerSettings)).append("\n");
    sb.append("    reportSummary: ").append(toIndentedString(reportSummary)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("web_id");
    openapiFields.add("workflow_id");
    openapiFields.add("position");
    openapiFields.add("delay");
    openapiFields.add("create_time");
    openapiFields.add("start_time");
    openapiFields.add("archive_url");
    openapiFields.add("status");
    openapiFields.add("emails_sent");
    openapiFields.add("send_time");
    openapiFields.add("content_type");
    openapiFields.add("needs_block_refresh");
    openapiFields.add("has_logo_merge_tag");
    openapiFields.add("recipients");
    openapiFields.add("settings");
    openapiFields.add("tracking");
    openapiFields.add("social_card");
    openapiFields.add("trigger_settings");
    openapiFields.add("report_summary");
    openapiFields.add("_links");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AutomationWorkflowEmail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AutomationWorkflowEmail.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomationWorkflowEmail is not found in the empty JSON string", AutomationWorkflowEmail.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("workflow_id") != null && !jsonObj.get("workflow_id").isJsonNull()) && !jsonObj.get("workflow_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workflow_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workflow_id").toString()));
      }
      // validate the optional field `delay`
      if (jsonObj.get("delay") != null && !jsonObj.get("delay").isJsonNull()) {
        AutomationDelayProperty1.validateJsonObject(jsonObj.getAsJsonObject("delay"));
      }
      if ((jsonObj.get("archive_url") != null && !jsonObj.get("archive_url").isJsonNull()) && !jsonObj.get("archive_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `archive_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("archive_url").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("content_type") != null && !jsonObj.get("content_type").isJsonNull()) && !jsonObj.get("content_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_type").toString()));
      }
      // validate the optional field `recipients`
      if (jsonObj.get("recipients") != null && !jsonObj.get("recipients").isJsonNull()) {
        ListProperty9.validateJsonObject(jsonObj.getAsJsonObject("recipients"));
      }
      // validate the optional field `settings`
      if (jsonObj.get("settings") != null && !jsonObj.get("settings").isJsonNull()) {
        CampaignSettingsProperty3.validateJsonObject(jsonObj.getAsJsonObject("settings"));
      }
      // validate the optional field `tracking`
      if (jsonObj.get("tracking") != null && !jsonObj.get("tracking").isJsonNull()) {
        CampaignTrackingOptionsProperty1.validateJsonObject(jsonObj.getAsJsonObject("tracking"));
      }
      // validate the optional field `social_card`
      if (jsonObj.get("social_card") != null && !jsonObj.get("social_card").isJsonNull()) {
        CampaignSocialCardProperty.validateJsonObject(jsonObj.getAsJsonObject("social_card"));
      }
      // validate the optional field `trigger_settings`
      if (jsonObj.get("trigger_settings") != null && !jsonObj.get("trigger_settings").isJsonNull()) {
        AutomationTriggerProperty1.validateJsonObject(jsonObj.getAsJsonObject("trigger_settings"));
      }
      // validate the optional field `report_summary`
      if (jsonObj.get("report_summary") != null && !jsonObj.get("report_summary").isJsonNull()) {
        CampaignReportSummaryProperty1.validateJsonObject(jsonObj.getAsJsonObject("report_summary"));
      }
      if (jsonObj.get("_links") != null && !jsonObj.get("_links").isJsonNull()) {
        JsonArray jsonArraylinks = jsonObj.getAsJsonArray("_links");
        if (jsonArraylinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("_links").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `_links` to be an array in the JSON string but got `%s`", jsonObj.get("_links").toString()));
          }

          // validate the optional field `_links` (array)
          for (int i = 0; i < jsonArraylinks.size(); i++) {
            ResourceLink.validateJsonObject(jsonArraylinks.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomationWorkflowEmail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomationWorkflowEmail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomationWorkflowEmail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomationWorkflowEmail.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomationWorkflowEmail>() {
           @Override
           public void write(JsonWriter out, AutomationWorkflowEmail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomationWorkflowEmail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AutomationWorkflowEmail instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AutomationWorkflowEmail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AutomationWorkflowEmail
  * @throws IOException if the JSON string is invalid with respect to AutomationWorkflowEmail
  */
  public static AutomationWorkflowEmail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomationWorkflowEmail.class);
  }

 /**
  * Convert an instance of AutomationWorkflowEmail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

